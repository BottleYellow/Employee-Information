@using EIS.WebApp.Services
@using EIS.Entities.OtherEntities;
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Http;
@model EIS.Entities.Dashboard.EmployeeDashboard
@{
    string APIURL = MyHttpContext.APIBaseURL;
    string cookiesdata = Context.Session.GetString("CookieData");

    CookieModel cookies = new CookieModel();
    if (cookiesdata != null)
    {
        cookies = JsonConvert.DeserializeObject<CookieModel>(cookiesdata);
    }
}
<head>
    <link href="~/Ems/css/jquery.dataTables.min.css" rel="stylesheet" />
    <style>
        div[class^="col"] {
            padding-left: 15px;
            padding-right: 15px;
        }

        .info-box {
            margin-bottom: 15px;
            cursor: pointer;
        }

        .label-OnLeave {
            background-color: mediumslateblue;
        }

        a:hover, a:focus {
            text-decoration: none;
        }

        * {
            font-family: Arial;
            font-style: normal
        }

        table.dataTable td {
            padding: 3px 10px;
            width: 1px;
            white-space: nowrap;
        }

        a {
            cursor: pointer;
        }

        .row {
            margin-left: -7px;
            margin-right: -7px;
        }

        .card {
            margin-left: -7px;
            margin-right: -7px;
        }

        .container-fluid {
            padding-left: 0px;
            padding-right: 0px;
        }

        .card .body {
            padding: 0px;
        }

        label {
            padding: 15px;
        }
        #pnl{
            margin-left:-15px;
        }
    </style>
</head>
<div class="container-fluid">

    <div class="block-header">
        <div class="row">
            <div class="col-md-12">
                <HeaderWithButton header-name="DASHBOARD" btn-href="location.href='@MyHttpContext.AppBaseUrl/Dashboard/EmployeeCalendar'" btn-text="Calendar" icon-name="assignment"></HeaderWithButton>
            </div>
        </div>
    </div>
    <div class="row clearfix" id="pnl">
        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
            <div style="width:280px">
                <a role="button" id="presentButton">
                    <div class="info-box bg-pink hover-expand-effect">
                        <div class="icon">
                            <i class="material-icons">contacts </i>
                        </div>
                        <div class="content">
                            <div class="text">Present Days</div>
                            <div class="number count-to" id="PresentDays"></div>
                        </div>
                    </div>
                </a>
            </div>
        </div>
        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
            <div style="width:280px">
                <a role="button" id="leaveButton">
                    <div class=" info-box bg-light-green hover-expand-effect">
                        <div class="icon">
                            <i class="material-icons">assignment_ind</i>
                        </div>
                        <div class="content">
                            <div class="text">Leaves Availed</div>
                            <div class="number count-to" id="AbsentDays"></div>
                        </div>
                    </div>
                </a>
            </div>
        </div>
        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
            <div style="width:280px">
                <a role="button" id="totalLeaveButton">
                    <div class="info-box bg-cyan hover-expand-effect">
                        <div class="icon">
                            <i class="material-icons">assignment_late</i>
                        </div>
                        <div class="content">
                            <div class="text">Total Leaves Approved</div>
                            <div class="number count-to" id="TotalLeavesTaken"></div>
                        </div>
                    </div>
                </a>
            </div>
         </div>
        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
            <div style="width:280px">
                <div class="info-box bg-orange hover-expand-effect">
                    <div class="icon">
                        <i class="material-icons">account_circle</i>
                    </div>
                    <div class="content">
                        <div class="text">Available Leaves</div>
                        <div class="number count-to" id="AvailableLeaves"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row clearfix">
        <!-- Task Info -->
        <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
            <div class="card">
                <div class="header" style="background-color:aliceblue;">
                    <h2 id="tableName"></h2>
                </div>

                <div class="body" id="attendanceCard">
                    <table class="table table-hover table-bordered table-striped dashboard-task-infos" id="attendanceTable" style="width:100%">
                        <thead>
                            <tr class="info">
                                <th>Date</th>
                                <th>Status</th>
                                <th>Clock In</th>
                                <th>Clock Out</th>
                                <th>Working Hours</th>

                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                    <table class="table table-hover table-bordered table-striped dashboard-task-infos" id="LeaveTable" hidden style="width:100%">
                        <thead>
                            <tr class="info">
                                <th>Leave Type</th>
                                <th>From Date</th>
                                <th>To Date</th>
                                <th>Days</th>
                                <th>Status</th>
                                <th>ApprovedBy</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Date:<span id="eventTitle"></span></h4>
            </div>
            <div class="modal-body" >
                <div class="form-group">
                    <label>Request Message</label>
                    <div class="form-line">
                        <textarea style="width:300px; height:250px" id="textData"></textarea>
                    </div>
                    <span id="textDataSpan" class="text-danger"></span>
                </div>                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="submitRequest" >Submit</button>               
                <button type="button" class="btn btn-default" id="closeRequest" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
<script src="~/plugins/bootbox/bootbox.min.js"></script>
<script src="~/Ems/js/jquery.dataTables.min.js"></script>
<script>
    var buttonSelected = "All";
    var selectOpt;
    var datetest;
    $(document).ready(function () {

     if ('@TempData["BirthdayAlert"]' != '') {
             bootbox.alert('<h4>@TempData["BirthdayAlert"]</h4><img src="@MyHttpContext.AppBaseUrl/gif/birthday.jpg" style="width:400px" /> ');
        }
        $('#tableName').html('Monthly Attendance<span style="float:right"> @DateTime.Now.ToString("MMM yyyy")</span>');
        generateReport(buttonSelected);
    });
    $('#presentButton').click(function () {
        buttonSelected = "Present";
        $('#tableName').html('Monthly Present Attendance<span style="float:right"> @DateTime.Now.ToString("MMM yyyy")</span>');
        generateReport(buttonSelected);
    });
    $("#leaveButton").click(function () {
        buttonSelected = "Leave";
        $('#tableName').html('Monthly Leave Attendance<span style="float:right"> @DateTime.Now.ToString("MMM yyyy")</span>');
        generateReport(buttonSelected);
    });
    $('#totalLeaveButton').click(function () {
        buttonSelected = "totalLeave";
        $('#tableName').html('Total Leaves Availed');
        generateReport(buttonSelected);
    });

    $('#submitRequest').on('click', function () {
        debugger;
        var pid =@cookies.PersonId;
        var message = $('#textData').val();
        var date = $("#eventTitle").html();
        if (message != "") {
            bootbox.confirm({
                message: "Are you sure you want to send the request",
                buttons: {
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    },
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success',
                    }                    
                },
                callback: function (result) {
                    if (result == true) {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("AttendanceRequest","Dashboard")',
                            data: { "personId": pid, "message": message, "dateSelected": date },
                            success: function (data) {
                                if (data == "success") {
                                    bootbox.alert({
                                        message: "Request sent successfully",
                                        callback: function () {
                                            window.parent.location.reload();
                                        }
                                    });
                                } else {
                                    bootbox.alert("Something went wrong. Please try again later.");
                                }
                            },
                            error: function () {
                                bootbox.alert("Error Occurred. Please try again later.");
                            }
                        });
                        $('#myModal').modal('hide');
                    }                                  
                }
            });
           
        } else
        {
            $('#textDataSpan').html("Please fill request message");
        }           
    });

    $('#closeRequest').click(function () {
        window.location.reload();
    });

    $('#textData').on('focus',function() {
        $('#textDataSpan').html("");
    });



    function generateReport(buttonSelected) {
        var pid=@cookies.PersonId;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("EmployeeDashboard","Dashboard")',
            data: { "PersonId": pid },
            success: function (data) {
                if (data != null) {
                    document.getElementById("PresentDays").innerHTML = data.SP_EmployeeDashboardCount.PresentDays ;
                    document.getElementById("AbsentDays").innerHTML = data.SP_EmployeeDashboardCount.OnLeaveDays;
                    document.getElementById("TotalLeavesTaken").innerHTML = data.SP_EmployeeDashboardCount.TotalLeavesTaken;
                    document.getElementById("AvailableLeaves").innerHTML = data.SP_EmployeeDashboardCount.AvailableLeaves;
                    if (buttonSelected == "totalLeave") {
                        $('#attendanceTable').hide();
                        $('#LeaveTable').show();
                        getData(data.SP_EmployeeLeaveRequest, buttonSelected);

                    } else {
                        $('#LeaveTable').hide();
                        $('#attendanceTable').show();
                        getData(data.SP_EmployeeDashboards, buttonSelected);
                    }

                }
            }
        });
    }
    //function getData(Employees, buttonSelected) {
    //    debugger;
    //    var array = [];
    //    for (var i = 0; i < Employees.length; i++) {
    //        var approvedName = "-";
    //        if (buttonSelected == "totalLeave") {
    //            var fromDate = moment(Employees[i].FromDate).format("DD-MMM-YYYY");
    //            var toDate = moment(Employees[i].ToDate).format("DD-MMM-YYYY");
    //            var Status = Employees[i].Status;
    //            if (Status == "Pending") {
    //                Status = '<span style="font-size:14px; font-weight:normal;" class="label label-warning">' + Status + '</span>';
    //            }
    //            else if (Status == "Approved" || Status.startsWith('Approved')) {
    //                if (Employees[i].LeaveType.includes("Past")) {
    //                    approvedName = "Past Leave Auto Approved";
    //                } else {
    //                    approvedName = Employees[i].ApprovedBy;
    //                }
    //                Status = '<span style="font-size:14px; font-weight:normal;" class="label label-success">' + Status + '</span>';
    //            }
    //            else if (Status == "Rejected") {
    //                Status = '<span style="font-size:14px; font-weight:normal;" class="label label-danger">' + Status + '</span>';
    //                approvedName = Employees[i].ApprovedBy;
    //            } else if (Status == "Cancelled") {
    //                approvedName = "-";
    //                Status = '<span style="font-size:14px; font-weight:normal;" class="label label-danger">' + Status + '</span>';
    //            }
    //            else if (Status == "Requested For Cancel") {
    //                Status = '<span style="font-size:14px; font-weight:normal;" class="label label-warning">' + Status + '</span>';
    //            }
    //            else {
    //                Status = '<span style="font-size:14px; font-weight:normal;" class="label label-danger">' + Status + '</span>';
    //            }
    //            array.push([Employees[i].LeaveType, fromDate, toDate, Employees[i].RequestedDays, Status, approvedName])
    //        } else {
    //            var TimeIn = Employees[i].TimeIn == null ? '-' : moment(Employees[i].TimeIn, 'HH:mm:ss').format('hh:mm A');
    //            var TimeOut = Employees[i].TimeOut == null ? '-' : moment(Employees[i].TimeOut, 'HH:mm:ss').format('hh:mm A');
    //            var TotalHours = Employees[i].TotalHours == null ? '-' : Employees[i].TotalHours;
    //            var todayDate = moment(new Date()).format("DD-MMM-YYYY");
    //            var dateInData = moment(new Date(Employees[i].DateIn)).format("DD-MMM-YYYY");
    //            if (todayDate == dateInData) {
    //                var expectedTimeOutDate = null;
    //                if (Employees[i].TimeIn != null && Employees[i].TimeOut == null) {
    //                    if (Employees[i].WorkingHours != null) {
    //                        var workingValue = Employees[i].WorkingHours;
    //                        var hr = workingValue.slice(0, 2);
    //                        var min = workingValue.slice(3, 5);
    //                        expectedTimeOutDate = moment(Employees[i].TimeIn, 'HH:mm:ss').add(parseInt(hr), 'h').format('HH:mm:ss');
    //                        expectedTimeOutDate = moment(expectedTimeOutDate, 'HH:mm:ss').add(parseInt(min), 'm').format('hh:mm A');
    //                    }
    //                    else {
    //                        expectedTimeOutDate = moment(Employees[i].TimeIn, 'HH:mm:ss').add(9, 'h').format('hh:mm A');
    //                    }
    //                    TimeOut = '<span style="font-size:14px; font-weight:normal;" class="label label-primary">Expected: ' + expectedTimeOutDate + '</span>';
    //                }
    //            }
    //            var Status = Employees[i].Status;
    //            if (buttonSelected == "Leave") {
    //                if (Status == "OnLeave") {
    //                    Status = '<span style="font-size:14px; font-weight:normal;" class="label label-warning">' + Status + '</span>';
    //                    array.push([moment(Employees[i].DateIn).format("DD MMM YYYY"), Status, TimeIn, TimeOut, TotalHours])
    //                }
    //            } else {
    //                if (buttonSelected == "Present") {
    //                    if (Status == "Present") {
    //                        Status = '<span style="font-size:14px; font-weight:normal;" class="label label-success">' + Status + '</span>';
    //                        array.push([moment(Employees[i].DateIn).format("DD MMM YYYY"), Status, TimeIn, TimeOut, TotalHours])
    //                    }
    //                } else {
    //                    if (Status == "Present") {
    //                        Status = '<span style="font-size:14px; font-weight:normal;" class="label label-success">' + Status + '</span>';
    //                    } else if (Status == "Absent") {
    //                        Status = '<span style="font-size:14px; font-weight:normal;" class="label label-danger">' + Status + '</span>';
    //                    } else {
    //                        Status = '<span style="font-size:14px; font-weight:normal;" class="label label-warning">' + Status + '</span>';
    //                    }
    //                    array.push([moment(Employees[i].DateIn).format("DD MMM YYYY"), Status, TimeIn, TimeOut, TotalHours])
    //                }
    //            }
    //        }
    //    }
    //    $('#LeaveTable').DataTable().destroy();
    //    $('#attendanceTable').DataTable().destroy();
    //    if (buttonSelected == "totalLeave") {
    //        $('#LeaveTable').DataTable({
    //            scrollX: true,
    //            "order": [1, 'desc'],
    //            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
    //                if (aData[4].includes("Approved")) {
    //                    $('td', nRow).addClass('success');
    //                } else if (aData[4].includes("Pending")) {
    //                    $('td', nRow).addClass('warning');
    //                }
    //                else {
    //                    $('td', nRow).addClass('danger');
    //                }
    //            },
    //            data: array
    //        });
    //    } else {
    //        $('#attendanceTable').DataTable({
    //            scrollX: true,
    //            "aoColumns": [
    //                { "sType": "date" },
    //                null,
    //                null,
    //                null,
    //                null
    //            ],
    //            "order": [0, "desc"],
    //            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
    //                if (aData[1].includes("Present")) {
    //                    $('td', nRow).addClass('success');
    //                } else if (aData[1].includes("Absent")) {
    //                    $('td', nRow).addClass('danger');
    //                }
    //                else {
    //                    $('td', nRow).addClass('warning');
    //                }
    //            },
    //            data: array
    //        });
    //    }
    //}

    function getData(Employees, buttonSelected) {
        var array=[];
        for (var i = 0; i < Employees.length; i++) {
            var approvedName = "-";
            if (buttonSelected == "totalLeave") {
                var fromDate = moment(Employees[i].FromDate).format("DD-MMM-YYYY");
                var toDate = moment(Employees[i].ToDate).format("DD-MMM-YYYY");
                var Status = Employees[i].Status;


                if (Status == "Pending") {
                    Status = '<span style="font-size:14px; font-weight:normal;" class="label label-warning">' + Status + '</span>';
                }
                else if (Status == "Approved" || Status.startsWith('Approved')) {
                    if (Employees[i].LeaveType.includes("Past")) {
                        approvedName = "Past Leave Auto Approved";
                    } else {
                        approvedName = Employees[i].ApprovedBy;
                    }

                    Status = '<span style="font-size:14px; font-weight:normal;" class="label label-success">' + Status + '</span>';

                }
                else if (Status == "Rejected"){
                    Status = '<span style="font-size:14px; font-weight:normal;" class="label label-danger">' + Status + '</span>';
                    approvedName =Employees[i].ApprovedBy;
                } else if (Status == "Cancelled") {
                    approvedName = "-";
                    Status = '<span style="font-size:14px; font-weight:normal;" class="label label-danger">' + Status + '</span>';
                }
                else if (Status == "Requested For Cancel") {
                    Status = '<span style="font-size:14px; font-weight:normal;" class="label label-warning">' + Status + '</span>';
                }
                else {
                    Status = '<span style="font-size:14px; font-weight:normal;" class="label label-danger">' + Status + '</span>';
                }
                array.push([Employees[i].LeaveType, fromDate, toDate, Employees[i].RequestedDays, Status, approvedName])
            } else
            {
                var TimeIn = Employees[i].TimeIn == null ? '-' : moment(Employees[i].TimeIn, 'HH:mm:ss').format('hh:mm A');
                var TimeOut = Employees[i].TimeOut == null ? '-' : moment(Employees[i].TimeOut, 'HH:mm:ss').format('hh:mm A');
                var TotalHours = Employees[i].TotalHours == null ? '-' : Employees[i].TotalHours;
                var todayDate = moment(new Date()).format("DD-MMM-YYYY");
                var dateInData = moment(new Date(Employees[i].DateIn)).format("DD-MMM-YYYY");
                if (todayDate == dateInData && Employees[i].Status=="Present") {
                    var expectedTimeOutDate = null;
                    if (Employees[i].TimeIn != null && Employees[i].TimeOut == null) {
                        if (Employees[i].WorkingHours != null) {
                            var workingValue = Employees[i].WorkingHours;
                            var hr = workingValue.slice(0, 2);
                            var min = workingValue.slice(3, 5);
                            expectedTimeOutDate = moment(Employees[i].TimeIn, 'HH:mm:ss').add(parseInt(hr), 'h').format('HH:mm:ss');
                            expectedTimeOutDate = moment(expectedTimeOutDate, 'HH:mm:ss').add(parseInt(min), 'm').format('hh:mm A');
                         }
                        else {
                            expectedTimeOutDate = moment(Employees[i].TimeIn, 'HH:mm:ss').add(9, 'h').format('hh:mm A');
                        }
                        TimeOut = '<span style="font-size:14px; font-weight:normal;" class="label label-primary">Expected: ' + expectedTimeOutDate + '</span>';
                    }
                }
                var Status = Employees[i].Status;

                if (buttonSelected == "Leave") {
                    if (Status == "OnLeave") {
                        Status = '<span style="font-size:14px; font-weight:normal;" class="label label-warning">' + Status + '</span>';
                        array.push([moment(Employees[i].DateIn).format("DD MMM YYYY"), Status, TimeIn, TimeOut, TotalHours])
                    }
                } else {
                    if (buttonSelected == "Present") {
                        if (Status == "Present") {
                            Status = '<span style="font-size:14px; font-weight:normal;" class="label label-success">' + Status + '</span>';
                            if (TimeOut == "-" && TotalHours == "-") {
                                if (todayDate != dateInData) {
                                    if (Employees[i].Message != null) {
                                        if (Employees[i].Message.includes("HR MESSAGE")) {
                                            TotalHours = '<button type="button" class="btn btn-danger">Request Cancelled</button>' + Employees[i].Message;
                                        } else {
                                            TotalHours = '<button type="button" class="btn btn-warning">Request Sent</button>';
                                        } 
                                    }
                                    else {
                                        TotalHours = 'No Data<button type="button" class="btn btn-info" onclick="sendRequest(\'' + moment(Employees[i].DateIn).format("DD MMM YYYY") + '\')">Send Clock Out Request</button>';
                                    }
                                }
                            }
                            array.push([moment(Employees[i].DateIn).format("DD MMM YYYY"), Status, TimeIn, TimeOut, TotalHours])
                        }
                    } else {
                        if (Status == "Present") {
                            Status = '<span style="font-size:14px; font-weight:normal;" class="label label-success">' + Status + '</span>';
                                if (TimeOut == "-" && TotalHours == "-") {
                                    if (Employees[i].Message != null) {
                                        if (Employees[i].Message.includes("HR MESSAGE")) {
                                            TotalHours = '<button type="button" class="btn btn-danger">Request Cancelled</button></br>' + Employees[i].Message;
                                        } else {
                                            TotalHours = '<button type="button" class="btn btn-warning">Request Sent</button>';
                                        } 
                                    }
                                    else {
                                        TotalHours = '<button type="button" class="btn btn-info" onclick="sendRequest(\'' + moment(Employees[i].DateIn).format("DD MMM YYYY")+ '\')">Send Clock Out Request</button>';
                                }
                            }
                        } else if (Status == "Absent") {
                            if (todayDate == dateInData) {
                                if (Employees[i].Message != null) {
                                    if (Employees[i].Message.includes("HR MESSAGE")) {
                                        TotalHours = '<button type="button" class="btn btn-danger">Request Cancelled</button>' + Employees[i].Message;
                                    } else {
                                        TotalHours = '<button type="button" class="btn btn-warning">Request Sent</button>';
                                    } 
                                }
                                else {
                                    TotalHours = '<button type="button" class="btn btn-info" onclick="sendRequest(\'' + moment(Employees[i].DateIn).format("DD MMM YYYY") + '\')">Send Work From Home Request</button>';
                                }
                            }
                            Status = '<span style="font-size:14px; font-weight:normal;" class="label label-danger">' + Status + '</span>';
                        }
                        else if (Status == "OnLeave") {
                            if (todayDate == dateInData) {
                                if (Employees[i].Message != null) {
                                    if (Employees[i].Message.includes("HR MESSAGE")) {
                                        TotalHours = '<button type="button" class="btn btn-danger">Request Cancelled</button>' + Employees[i].Message;
                                    } else {
                                        TotalHours = '<button type="button" class="btn btn-warning">Request Sent</button>';
                                    } 
                                }
                                else {
                                    TotalHours = '<button type="button" class="btn btn-info" onclick="sendRequest(\'' + moment(Employees[i].DateIn).format("DD MMM YYYY") + '\')">Send Work From Home Request</button>';
                                }
                            }
                            Status = '<span style="font-size:14px; font-weight:normal;" class="label label-OnLeave">' + Status + '</span>';
                        } else {
                            if (todayDate == dateInData) {
                                if (Employees[i].Message != null) {
                                    if (Employees[i].Message.includes("HR MESSAGE")) {
                                        TotalHours = '<button type="button" class="btn btn-danger">Request Cancelled</button>' + Employees[i].Message;
                                    } else {
                                        TotalHours = '<button type="button" class="btn btn-warning">Request Sent</button>';
                                    } 
                                }
                                else {
                                    TotalHours = '<button type="button" class="btn btn-info" onclick="sendRequest(\'' + moment(Employees[i].DateIn).format("DD MMM YYYY") + '\')">Send Work From Home Request</button>';
                                }
                            }
                            Status = '<span style="font-size:14px; font-weight:normal;" class="label label-warning">' + Status + '</span>';
                        }
                        if (Employees[i].Status != "Present") {
                            TimeIn = "-";
                        }


                        array.push([moment(Employees[i].DateIn).format("DD MMM YYYY"), Status, TimeIn, TimeOut, TotalHours])
                    }
                }
            }
        }
        $('#LeaveTable').DataTable().destroy();
        $('#attendanceTable').DataTable().destroy();
        if (buttonSelected == "totalLeave") {
            $('#LeaveTable').DataTable({
                scrollX:true,
                "order": [1, 'desc'],
                "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                    if (aData[4].includes("Approved")) {
                        $('td', nRow).addClass('success');
                    } else if (aData[4].includes("Pending")) {
                        $('td', nRow).addClass('warning');
                    }
                    else {
                        $('td', nRow).addClass('danger');
                    }
                },
                data: array
            });
        } else {

            $('#attendanceTable').DataTable({
                scrollX:true,
                "aoColumns": [
                    { "sType": "date" },
                    null,
                    null,
                    null,
                    null
                ],
                "order": [0, "desc"],
                "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                    if (aData[1].includes("Present")) {
                        $('td', nRow).addClass('success');
                    } else if (aData[1].includes("Absent")) {
                        $('td', nRow).addClass('danger');
                    }
                    else {
                        $('td', nRow).addClass('warning');
                    }
                },
                data: array
            });
        }
    }

    function sendRequest(date) {
        $("#myModal #eventTitle").text(date);
        $("#myModal").modal();
        $('#textDataSpan').html("");
    }
</script>
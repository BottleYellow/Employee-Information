@model EIS.Entities.Employee.Person
@using EIS.Entities.Address;
@using Microsoft.AspNetCore.Http;
@using EIS.WebApp.Services;
@{
    RedisAgent Cache = new RedisAgent();
}
<html>
<head>
    <title>Profile</title>

    <style type="text/css">

        .deco-none {
            text-decoration: none !important;
        }

        .red-class {
            color: red !important;
        }

        .panel-collapse {
            background-color: white;
        }

        #createpadd {
            font-weight: bold;
            font-size: 14px;
        }

        .profile {
            height: 30px;
            text-align: match-parent;
        }

        .profilelable {
            font-size: 16px;
        }
    </style>
</head>
<body id="body" name="body">
    <div class="container-fluid">
        <div class="row clearfix">
            <input id="InTime" type="hidden" value="@ViewBag.TimeIn.ToString(@"hh\:mm\:ss")" />
            <input id="OutTime" type="hidden" value="@ViewBag.TimeOut.ToString(@"hh\:mm\:ss")" />
            <div class="col-xs-12 col-sm-3">
                <div class="card profile-card">
                    <div class="profile-header">&nbsp;</div>
                    <div class="profile-body">
                        <div class="image-area">
                            <img src="/EmployeeData/@Model.TenantId@Model.EmployeeCode/Image/@Model.Image" alt="AdminBSB - Profile Image" class="img img-circle" />
                        </div>
                        <div class="content-area">
                            <h3>@ViewBag.Name</h3>
                            <div class="profile"><label class="profilelable">Designation : </label> @Html.DisplayFor(model => model.Role.Name)</div>
                            <div class="profile"><label class="profilelable">Email Id :</label> @Html.DisplayFor(model => model.EmailAddress)</div>
                            <div class="profile"><label class="profilelable">DOB :</label> @Html.DisplayFor(model => model.DateOfBirth)</div>
                            <div class="profile"><label class="profilelable">Mob. Number :</label> @Html.DisplayFor(model => model.MobileNumber)</div>
                            <div class="profile"><label class="profilelable">Gender :</label> @Html.DisplayFor(model => model.Gender)</div>
                            <div class="profile"><label class="profilelable">Aadhar no. :</label> @Html.DisplayFor(model => model.AadharCard)</div>
                            <div class="profile"><label class="profilelable">Pan no. :</label> @Html.DisplayFor(model => model.PanCard)</div>
                            <div class="profile"><label class="profilelable">Salary :</label> @Html.DisplayFor(model => model.Salary)</div>
                            <div class="profile"><a href="/People/Edit?id=@Model.Id">Edit Profile</a></div>
                        </div>
                    </div>

                </div>

            </div>
            <div class="col-xs-12 col-sm-9">
                <div class="card">
                    <div class="body">
                        <div>
                            <ul class="nav nav-tabs responsive" role="tablist">
                                <li role="presentation" class="active"><a href="#padd" aria-controls="settings" role="tab" data-toggle="tab">Permanent Address</a></li>
                                <li role="presentation"><a href="#cadd" aria-controls="settings" role="tab" data-toggle="tab">Current Addresses</a></li>
                                <li role="presentation"><a href="#eadd" aria-controls="settings" role="tab" data-toggle="tab">Emergency Addresses</a></li>
                            </ul>
                            <div class="tab-content responsive">
                                <div role="tabpanel" class="tab-pane fade in active" id="padd">

                                    <div class="panel-body">
                                        <div style="display:none;" class="panel panel-body" id="createpaddpanel">
                                            <form id="cp" method="post">
                                                @{ Html.RenderPartial("CreatePermanentAddress", Model.PermanentAddress); }
                                                <button type="button" id="btnSubmit" name="btnSubmit" class="btn btn-primary m-t-15 waves-effect">Create</button>
                                                <button type="button" id="pacancel" name="pacancel" class="btn btn-primary m-t-15 waves-effect">Cancel</button>
                                            </form>
                                        </div>
                                        <div style="display:none;" class="panel panel-body" id="editpaddpanel">
                                            <form asp-action="EditPermanentAddress" asp-controller="People" asp-route-pid="@Model.Id" method="post">
                                                <input type="hidden" id="id" name="id" asp-for="@Model.PermanentAddress.Id" />
                                                @{ Html.RenderPartial("EditPermanentAddress", Model.PermanentAddress); }
                                                <button type="submit" class="btn btn-primary m-t-15 waves-effect">Edit</button>
                                                <button type="button" id="pcancel" name="pcancel" class="btn btn-primary m-t-15 waves-effect">Cancel</button>
                                            </form>
                                        </div>
                                        <div id="paddtable" class="body table-responsive">
                                            @if (Model.PermanentAddress.Address != null || Cache.GetStringValue("Role") == "Admin")
                                    {
                                        <table id="ptable" name="ptable" class="table table-bordered table-hover">
                                            <tr>
                                                <th>Address</th>
                                                <th>Active Status</th>
                                                <th>Actions</th>
                                            </tr>
                                            @if (Model.PermanentAddress.Address != null)
                                    {
                                        <tr>
                                            <td>
                                                @Model.PermanentAddress.Address, @Model.PermanentAddress.City, @Model.PermanentAddress.State, @Model.PermanentAddress.Country - @Model.PermanentAddress.PinCode
                                            </td>
                                            <td>
                                                @if (Model.PermanentAddress.IsActive == true)
                                        {
                                            <span class="label label-success">Active</span>
                                }
                                else
                                {
                                    <span class="label label-warning">Inactive</span>
                        }
                                            </td>
                                            <td>
                                                <button type="button" id="editpadd" name="editpadd" class="btn btn-primary waves-effect">
                                                    <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                                                    <span><strong>Edit</strong></span>
                                                </button>
                                                <button id="btndeletepermanent" type="button" class="btn btn btn-danger waves-effect">
                                                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                                    <span><strong>Delete</strong></span>
                                                </button>
                                            </td>
                                        </tr>
                            }
                                        </table>
                            }
                            else
                            {
                                <p>Permanent Address is not added. Please Create your new address.</p>
                    }
                                        </div>
                                        @if (Model.PermanentAddress.Address == null)
                                {
                                    <p>
                                        <button type="button" id="createpadd" name="createpadd" class="btn btn-primary waves-effect">Create New</button>
                                    </p>
                        }
                                    </div>

                                </div>
                                <div role="tabpanel" class="tab-pane fade in" id="cadd">
                                    <div class="panel-body">
                                        <div style="display:none;" class="panel panel-body" id="createcaddpanel">
                                            <form asp-action="CreateCurrentAddress" asp-controller="People" asp-route-pid="@Model.Id" method="post">
                                                @{ Html.RenderPartial("CreateCurrentAddress", Model.CurrentAddress); }
                                                <button type="button" id="cacancel" name="cacancel" class="btn btn-primary m-t-15 waves-effect">Cancel</button>
                                            </form>
                                        </div>
                                        <div style="display:none;" class="panel panel-body" id="editcaddpanel">
                                            <form asp-action="EditCurrentAddress" asp-controller="People" asp-route-pid="@Model.Id" method="post">
                                                <input type="hidden" id="id" name="id" asp-for="@Model.CurrentAddress.Id" />
                                                @{ Html.RenderPartial("EditCurrentAddress", Model.CurrentAddress); }
                                                <button type="submit" class="btn btn-primary m-t-15 waves-effect">Edit</button>
                                                <button type="button" id="ccancel" name="ccancel" class="btn btn-primary m-t-15 waves-effect">Cancel</button>
                                            </form>
                                        </div>
                                        <div id="caddtable" class="body table-responsive">
                                            @if (Model.CurrentAddress.Address != null || Cache.GetStringValue("Role") == "Admin")
                                    {
                                        <table id="ctable" name="ctable" class="table table-bordered table-hover">
                                            <tr>
                                                <th>Address</th>
                                                <th>Active Status</th>
                                                <th>Actions</th>
                                            </tr>
                                            @if (Model.CurrentAddress.Address != null)
                                    {
                                        <tr>
                                            <td>@Model.CurrentAddress.Address ,@Model.CurrentAddress.City , @Model.CurrentAddress.State , @Model.CurrentAddress.Country - @Model.CurrentAddress.PinCode </td>
                                            <td>
                                                @if (Model.CurrentAddress.IsActive == true)
                                        {
                                            <span class="label label-success">Active</span>
                                }
                                else
                                {
                                    <span class="label label-warning">Inactive</span>
                        }
                                            </td>
                                            <td>
                                                <button type="button" id="editcadd" name="editcadd" class="btn btn-primary waves-effect">
                                                    <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                                                    <span><strong>Edit</strong></span>
                                                </button>
                                                <button id="btndeletecurrent" type="button" class="btn btn btn-danger waves-effect">
                                                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                                    <span><strong>Delete</strong></span>
                                                </button>

                                            </td>

                                        </tr>
                            }
                                        </table>
                            }
                            else
                            {
                                <p>Current Address is not added. Please Create your new address.</p>
                    }
                                        </div>
                                        @if (Model.CurrentAddress.Address == null)
                                {
                                    <p>
                                        <button type="button" id="createcadd" name="createcadd" class="btn btn-primary waves-effect">Create New</button>
                                    </p>
                        }
                                    </div>
                                </div>
                                <div role="tabpanel" class="tab-pane fade in" id="eadd">
                                    <div class="panel-body">
                                        <div style="display:none;" class="panel panel-body" id="createEaddpanel">
                                            <form asp-action="CreateEmergencyAddress" asp-route-pid="@Model.Id" asp-controller="People" method="post">
                                                @{ Html.RenderPartial("CreateEmergencyAddress", new Emergency()); }
                                                <button type="button" id="eacancel" name="eacancel" class="btn btn-primary m-t-15 waves-effect">Cancel</button>
                                            </form>
                                        </div>
                                        <div style="display:none;" class="panel panel-body" id="editEaddpanel">
                                            <form asp-action="EditEmergencyAddress" asp-controller="People" asp-route-pid="@Model.Id" method="post">
                                                <div id="editform">
                                                    @{
                                                Html.RenderPartial("EditEmergencyAddress", new Emergency());
                                                    }
                                                </div>

                                                <button type="submit" class="btn btn-primary m-t-15 waves-effect">Edit</button>
                                                <button type="reset" id="ecancel" name="ecancel" class="btn btn-primary m-t-15 waves-effect">Cancel</button>
                                            </form>
                                        </div>
                                        <div id="eaddtable" class="body table-responsive">
                                            @if (Model.EmergencyAddress.Count > 0 || Cache.GetStringValue("Role") == "Admin")
                                    {
                                        <table id="etable" name="etable" class="table table-bordered table-hover">
                                            <tr>
                                                <th>Name</th>
                                                <th>Address</th>
                                                <th>Contacts</th>
                                                <th>Active Status</th>
                                                <th>Actions</th>
                                            </tr>
                                            @foreach (var item in Model.EmergencyAddress)
                                    {
                                        <tr>
                                            <td>
                                                @item.FirstName @item.LastName
                                            </td>
                                            <td>
                                                @item.Address, @item.City, @item.State, @item.Country - @item.PinCode
                                            </td>
                                            <td>
                                                @item.MobileNumber, @item.PhoneNumber
                                            </td>
                                            <td>
                                                @if (@item.IsActive == true)
                                        {
                                            <span class="label label-success">Active</span>
                                }
                                else
                                {
                                    <span class="label label-warning">Inactive</span>
                        }
                                            </td>
                                            <td>
                                                <button type="button" id="@item.Id" class="btn btn-primary waves-effect emergency">
                                                    <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                                                    <span><strong>Edit</strong></span>
                                                </button>
                                                <button id="@item.Id" type="button" class="btn btn btn-danger waves-effect delete">
                                                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                                    <span><strong>Delete</strong></span>
                                                </button>

                                            </td>

                                        </tr>
                            }
                                        </table>
                            }
                            else
                            {
                                <p>Emergency Address is not added. Please Create your new address.</p>
                    }
                                        </div>
                                        <p>
                                            <button type="button" id="createEadd" name="createEadd" class="btn btn-primary waves-effect">Create New</button>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="~/lib/bootstrap/dist/js/responsive-tabs.js"></script>
    <script src="~/plugins/bootbox/bootbox.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
</body>
</html>
@section Attendance
    {
    <li><button type="button" class="btn btn-primary" id="clockIn"><b>Clock In</b><br /></button></li>
    <li><button type="button" class="btn btn-primary" id="clockOut"><b>Clock Out</b><br /></button></li>
}
<script>

    $(document).ready(function () {
        var TimeIn = document.getElementById('InTime').value;
        var TimeOut = document.getElementById('OutTime').value;
        if (TimeIn != '00:00:00') {
            document.getElementById('clockIn').innerHTML = "Clock In </br>" + TimeIn;
            $('#clockIn').attr('disabled', 'disabled');
        }
        if (TimeOut != '00:00:00') {
            document.getElementById('clockOut').innerHTML = "Clock Out </br>" + TimeOut;
        }

        $('.collapse.in').prev('.panel-heading').addClass('active');
        $('#accordion, #bs-collapse')
            .on('show.bs.collapse', function (a) {
                $(a.target).prev('.panel-heading').addClass('active');
            })
            .on('hide.bs.collapse', function (a) {
                $(a.target).prev('.panel-heading').removeClass('active');
            });

        @if(Cache.GetStringValue("Role")=="Admin" && Model.OtherAddress.Count > 0)
        {
            foreach(var other in Model.OtherAddress)
            {
                if(other.AddressType=="Permanent Address")
                {
                 @:var tblRow = '<tr><td>@other.Address, @other.City, @other.State, @other.Country - @other.PinCode</td><td><span class="label label-warning">Inactive</span></td><td>Address Has been deleted</td></tr>';
                 @:$("#ptable").append(tblRow);
                 }
                else if(other.AddressType=="Current Address")
                {
                 @:var tblRow = '<tr><td>@other.Address, @other.City, @other.State, @other.Country - @other.PinCode</td><td><span class="label label-warning">Inactive</span></td><td>Address Has been deleted</td></tr>';
                 @:$("#ctable").append(tblRow);
                 }
                else if(other.AddressType=="Emergency Address")
                {
                 @:var tblRow = '<tr><td></td><td>@other.Address, @other.City, @other.State, @other.Country - @other.PinCode</td><td></td><td><span class="label label-warning">Inactive</span></td><td>Address Has been deleted</td></tr>';
                 @:$("#etable").append(tblRow);
                 }
            }
        }
    });

    $('#clockIn').click(function () {
        $.ajax({
            type: 'GET',
            url: '/Attendance/AttendanceInOut',
            success: function (data) {
                var d = new Date();
                document.getElementById('clockIn').innerHTML = "Clock In </br>" + d.toLocaleTimeString();
                $('#clockIn').attr('disabled', 'disabled');
            }
        })
    });
    $('#clockOut').click(function () {
        $.ajax({
            type: 'POST',
            url: '/Attendance/AttendanceInOut',
            success: function () {
                var e = new Date();
                document.getElementById('clockOut').innerHTML = "Clock Out </br>" + e.toLocaleTimeString();
            }
        });
    });

    $('ul.nav.nav-tabs  a').click(function (e) {
    e.preventDefault();
    $(this).tab('show');
    });
    $("#createpadd").click(function () {
        //var h = document.getElementById("createpadd").innerHTML;
        //document.getElementById("createpadd").innerHTML = h.startsWith('Create New') ? 'Show Addresses' : 'Create New';
        $("#createpadd").hide();
        //$(this).html=$(this).html == 'Create New' ? 'Show Addresses' : 'Create New';
        $("#paddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#createpaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });
    $("#editpadd").click(function () {
        $("#paddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#editpaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });
    $("#pacancel").click(function () {
        $("#paddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#createpaddpanel").slideToggle({
            direction: "up"
        }, 300);
        $("#createpadd").show();
    });
    $("#pcancel").click(function () {
        $("#paddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#editpaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });

    $("#btndeletepermanent").click(function () {
        bootbox.confirm({
            title: "Delete Address?",
            message: "Do you want to remove this record?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result == true) {
                    var url1 = "/People/DeletePermanentAddress";
                    $.ajax({
                        url: url1,
                        data: { perid: @Model.PermanentAddress.Id },
                        success: function (Data) {
                            bootbox.alert({
                                message: "Record Deleted Successfully!"
                            });
                            $("#padd").load(document.URL + ' #padd');

                        },

                    });
                    }
            }
        });
    });
    $("#createcadd").click(function () {
        $("#createcadd").hide();
        //var h = document.getElementById("createcadd").innerHTML;
        //document.getElementById("createcadd").innerHTML = h.startsWith('Create New') ? 'Show Addresses' : 'Create New';
        //$(this).html=$(this).html == 'Create New' ? 'Show Addresses' : 'Create New';
        $("#caddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#createcaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });
    $("#editcadd").click(function () {
        $("#caddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#editcaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });
    $("#ccancel").click(function () {
        $("#caddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#editcaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });
    $("#cacancel").click(function () {
        $("#caddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#createcaddpanel").slideToggle({
            direction: "up"
        }, 300);
        $("#createcadd").show();
    });
    $("#btndeletecurrent").click(function () {
        bootbox.confirm({
            title: "Delete Address?",
            message: "Do you want to remove this record?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result == true) {
                    var url1 = "/People/DeleteCurrentAddress";
                    $.ajax({
                        url: url1,
                        data: { cid: @Model.CurrentAddress.Id },
                        success: function (Data) {
                            bootbox.alert({
                                message: "Record Deleted Successfully!"
                            });
                            $("#cadd").load(document.URL + ' #cadd');

                        },
                    });
                    }
            }
        });
    });
    $("#createEadd").click(function () {
        $("#createEadd").hide();
        //var h = document.getElementById("createEadd").innerHTML;
        //document.getElementById("createEadd").innerHTML = h.startsWith('Create New') ? 'Show Addresses' : 'Create New';
        //$(this).html=$(this).html == 'Create New' ? 'Show Addresses' : 'Create New';
        $("#eaddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#createEaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });

    var buttons = document.getElementsByClassName('btn btn-primary waves-effect emergency');
    for (var i = 0; i < buttons.length; i++) {
        buttons[i].addEventListener("click", function () {
            var j = $(this).attr('id');
            $("#eaddtable").slideToggle({
                direction: "down"
            }, 300);
            $("#editEaddpanel").slideToggle({
                direction: "up"
            }, 300);
            var url1 = "/People/EditEmergencyAddress";
            $.ajax({
                url: url1,
                type:'get',
                data: { eid: j },
                success: function (Data) {
                    $("#editform").html(Data);
                }
            });
            $("#createEadd").hide();
            });
        }
    $("#ecancel").click(function () {
        $("#eaddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#editEaddpanel").slideToggle({
            direction: "up"
        }, 300);
        $("#createEadd").show();
    });
    $("#eacancel").click(function () {
        $("#eaddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#createEaddpanel").slideToggle({
            direction: "up"
        }, 300);
        $("#createEadd").show();
    });
    var buttons = document.getElementsByClassName('btn btn btn-danger waves-effect delete');
    for (var i = 0; i < buttons.length; i++) {
        buttons[i].addEventListener("click", function () {
            var j = $(this).attr('id');
            bootbox.confirm({
            title: "Delete Address?",
            message: "Do you want to remove this record?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result == true) {
                    var url1 = "/People/DeleteEmergencyAddress";
                    $.ajax({
                        url: url1,
                        data: { eid: j },
                        success: function (Data) {
                            bootbox.alert({
                                message: "Record Deleted Successfully!"
                            });
                            $("#eadd").load(document.URL + ' #eadd');

                        },

                    });
                    }
            }
        });
        });
    }
    $('#btnSubmit').click(function () {
        var form = $("#cp");
        $.validator.unobtrusive.parse(form);
        if (form.valid()) {
            var d = form.serialize();
                var url1 = "/People/CreatePermanentAddress?pid="+@Model.Id+"";
                $.ajax({
                    url: url1,
                    type: 'POST',
                    data: d,
                    success: function (data) {
                        window.top.location.reload(false);
                        bootbox.alert({
                            message: "Address Saved Successfully!"
                        });
                    }
                });
            }
            return false;
    });
    (function ($) {
    // Test for making sure event are maintained
    $('.js-alert-test').click(function () {
        alert('Button Clicked: Event was maintained');
    });
    fakewaffle.responsiveTabs(['xs', 'sm']);
    })(jQuery);
</script>

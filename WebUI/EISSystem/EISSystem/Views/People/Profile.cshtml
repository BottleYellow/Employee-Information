@model EIS.Entities.Employee.Person
@using EIS.Entities.Address;
@using EIS.WebApp.Services
@using EIS.Entities.OtherEntities;
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Http;

@{

    string cookiesdata = Context.Session.GetString("CookieData");

    CookieModel cookies = new CookieModel();
    if (cookiesdata != null)
    {
        cookies = JsonConvert.DeserializeObject<CookieModel>(cookiesdata);
    }

}
@if (cookies.Role != "Admin")
{
    @section Attendance
        {
        <li><button type="button" class="btn btn-primary" id="clockIn"><b>Clock In</b><br /></button></li>
        <li><button type="button" class="btn btn-primary" id="clockOut" hidden><b>Clock Out</b><br /></button></li>
        <li><button type="button" class="btn btn-primary" id="tWHrs"><b>Total Working Hrs</b><br /></button></li>
    }
    @section EstimatedTimeOut
        {  <div id="eTOut" style="color:white;">Estimated Time Out</div>
    }
}
<html>
<head>
    <title>Profile</title>

    <style type="text/css">

        .deco-none {
            text-decoration: none !important;
        }

        .red-class {
            color: red !important;
        }

        .panel-collapse {
            background-color: white;
        }

        #createpadd {
            font-weight: bold;
            font-size: 14px;
        }

        .profile {
            height: 30px;
            text-align: match-parent;
        }

        .profilelable {
            font-size: 16px;
        }
        * {
            font-family: Arial;
            font-style: normal
        }
    </style>
</head>
<body id="body" name="body">
    <div class="container-fluid">
        <div class="row clearfix">
            <input id="InTime" type="hidden" value="@ViewBag.TimeIn.ToString(@"hh\:mm\:ss")" />
            <input id="OutTime" type="hidden" value="@ViewBag.TimeOut.ToString(@"hh\:mm\:ss")" />
            <input id="totalHours" type="hidden" value="@ViewBag.TotalHrs.ToString(@"hh\:mm\:ss")" />
            <input id="estimatedTimeOut" type="hidden" value="@ViewBag.EstimatedTimeOut.ToString(@"hh\:mm\:ss")" />
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-4">
                <div class="card profile-card">
                    <div class="profile-header">&nbsp;</div>
                    <div class="profile-body">
                        <div class="image-area">

                            <img src="@MyHttpContext.AppBaseUrl//EmployeeData/@Model.TenantId@Model.EmployeeCode/Image/@Model.Image" alt="Profile Image" class="img img-circle" onerror="if (this.src!='@MyHttpContext.AppBaseUrl/EmployeeData/DefaultImage/Default.png') this.src='@MyHttpContext.AppBaseUrl/EmployeeData/DefaultImage/Default.png';"/>
                        </div>
                        <div class="content-area">
                            <h3>@Html.DisplayFor(model => model.FullName)</h3>
                            <div class="profile"><a href="@Url.Action("Edit", "People")?EmployeeCode=@Model.EmployeeCode">Edit Profile</a></div>
                            <div class="body table-responsive">
                                <table name="profiletable" class="table table-bordered table-hover">
                                    <tr>
                                        <th>Employee Code</th>
                                        <td>@Html.DisplayFor(model => model.EmployeeCode)</td>
                                    </tr>
                                    <tr>
                                        <th>Designation</th>
                                        <td>@Html.DisplayFor(model => model.Role.Name)</td>
                                    </tr>
                                    <tr>
                                        <th>Join Date</th>
                                        <td>@Model.JoinDate.ToString("dd MMM yyyy")</td>
                                    </tr>
                                    @{
                                        if (@Model.IsOnProbation == true)
                                        {
                                            <tr>
                                                <th>Probation Period</th>
                                                <td>@Html.DisplayFor(model => model.PropbationPeriodInMonth) Months</td>
                                            </tr>
                                        }
                                    }
                                    <tr>
                                        <th>Email</th>
                                        <td>@Html.DisplayFor(model => model.EmailAddress)</td>
                                    </tr>
                                    <tr>
                                        <th>Mobile No</th>
                                        <td>@Html.DisplayFor(model => model.MobileNumber)</td>
                                    </tr>
                                    <tr>
                                        <th>DOB</th>
                                        <td>@Model.DateOfBirth.ToString("dd MMM yyyy")</td>
                                    </tr>
                                    <tr>
                                        <th>Gender</th>
                                        <td>@Html.DisplayFor(model => model.Gender)</td>
                                    </tr>
                                    <tr>
                                        <th>Aadhar No</th>
                                        <td> @Html.DisplayFor(model => model.AadharCard)</td>
                                    </tr>
                                    <tr>
                                        <th>PAN No</th>
                                        <td>@Html.DisplayFor(model => model.PanCard)</td>
                                    </tr>
                                    <tr>
                                        <th>Salary</th>
                                        <td>@Html.DisplayFor(model => model.Salary)</td>
                                    </tr>
                                </table>

                            </div>

                        </div>
                    </div>

                </div>

            </div>
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-8">
                <div class="card">
                    <div class="body">
                        <div>
                            <ul class="nav nav-tabs responsive" role="tablist">
                                <li role="presentation" class="active"><a href="#padd" aria-controls="settings" role="tab" data-toggle="tab">Permanent Address</a></li>
                                <li role="presentation"><a href="#cadd" aria-controls="settings" role="tab" data-toggle="tab">Current Addresses</a></li>
                                <li role="presentation"><a href="#eadd" aria-controls="settings" role="tab" data-toggle="tab">Emergency Addresses</a></li>
                            </ul>
                            <div class="tab-content responsive">
                                <div role="tabpanel" class="tab-pane fade in active" id="padd">

                                    <div class="panel-body">
                                        <div style="display:none;" class="panel panel-body" id="createpaddpanel">
                                            <form asp-action="CreatePermanentAddress" asp-controller="People" asp-route-pid="@Model.Id" asp-route-EmployeeCode="@Model.EmployeeCode" id="cp" method="post">
                                                @{await Html.RenderPartialAsync("CreatePermanentAddress", Model.PermanentAddress); }
                                                <button type="button" id="pacancel" name="pacancel" class="btn btn-primary m-t-15 waves-effect">Cancel</button>
                                            </form>
                                        </div>
                                        <div style="display:none;" class="panel panel-body" id="editpaddpanel">
                                            <form asp-action="EditPermanentAddress" asp-controller="People" asp-route-EmployeeCode="@Model.EmployeeCode" method="post">
                                                <input type="hidden" id="id" name="id" asp-for="@Model.PermanentAddress.Id" />
                                                <input type="hidden" id="pid" name="pid" asp-for="@Model.PermanentAddress.PersonId" />
                                                @{await Html.RenderPartialAsync("EditPermanentAddress", Model.PermanentAddress); }
                                                <button type="submit" class="btn btn-primary m-t-15 waves-effect">Save</button>
                                                <button type="button" id="pcancel" name="pcancel" class="btn btn-primary m-t-15 waves-effect">Cancel</button>
                                            </form>
                                        </div>
                                        <div id="paddtable" class="body table-responsive">
                                            @if (Model.PermanentAddress.Address != null || cookies.Role == "Admin")
                                            {
                                                <table id="ptable" name="ptable" class="table table-bordered table-hover">
                                                    <tr>
                                                        <th>Address</th>
                                                        <th>Active Status</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                    @if (Model.PermanentAddress.Address != null)
                                                    {
                                                        <tr>
                                                            <td>
                                                                @Model.PermanentAddress.Address, @Model.PermanentAddress.City, @Model.PermanentAddress.State, @Model.PermanentAddress.Country - @Model.PermanentAddress.PinCode
                                                            </td>
                                                            <td>
                                                                @if (Model.PermanentAddress.IsActive == true)
                                                                {
                                                                    <span class="label label-success">Active</span>
                                                                }
                                                                else
                                                                {
                                                                    <span class="label label-warning">Inactive</span>
                                                                }
                                                            </td>
                                                            <td>
                                                                <button type="button" id="editpadd" name="editpadd" class="btn btn-primary waves-effect">
                                                                    <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                                                                    <span><strong>Edit</strong></span>
                                                                </button>
                                                                <button id="btndeletepermanent" type="button" class="btn btn btn-danger waves-effect">
                                                                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                                                    <span><strong>Delete</strong></span>
                                                                </button>
                                                            </td>
                                                        </tr>
                                                    }
                                                </table>
                                            }
                                            else
                                            {
                                                <p>Permanent Address is not added. Please Create your new address.</p>
                                            }
                                        </div>
                                        @if (Model.PermanentAddress.Address == null)
                                        {
                                            <p>
                                                <button type="button" id="createpadd" name="createpadd" class="btn btn-primary waves-effect">Create New</button>
                                            </p>
                                        }
                                    </div>

                                </div>
                                <div role="tabpanel" class="tab-pane fade in" id="cadd">
                                    <div class="panel-body">
                                        <div style="display:none;" class="panel panel-body" id="createcaddpanel">
                                            <form asp-action="CreateCurrentAddress" asp-controller="People" asp-route-pid="@Model.Id" asp-route-EmployeeCode="@Model.EmployeeCode" method="post">
                                                @{await Html.RenderPartialAsync("CreateCurrentAddress", Model.CurrentAddress); }
                                                <button type="button" id="cacancel" name="cacancel" class="btn btn-primary m-t-15 waves-effect">Cancel</button>
                                            </form>
                                        </div>
                                        <div style="display:none;" class="panel panel-body" id="editcaddpanel">
                                            <form asp-action="EditCurrentAddress" asp-controller="People" asp-route-EmployeeCode="@Model.EmployeeCode" method="post">
                                                <input type="hidden" id="id" name="id" asp-for="@Model.CurrentAddress.Id" />
                                                <input type="hidden" id="pid" name="pid" asp-for="@Model.CurrentAddress.PersonId" />
                                                @{await Html.RenderPartialAsync("EditCurrentAddress", Model.CurrentAddress); }
                                                <button type="submit" class="btn btn-primary m-t-15 waves-effect">Save</button>
                                                <button type="button" id="ccancel" name="ccancel" class="btn btn-primary m-t-15 waves-effect">Cancel</button>
                                            </form>
                                        </div>
                                        <div id="caddtable" class="body table-responsive">
                                            @if (Model.CurrentAddress.Address != null || cookies.Role == "Admin")
                                            {
                                                <table id="ctable" name="ctable" class="table table-bordered table-hover">
                                                    <tr>
                                                        <th>Address</th>
                                                        <th>Active Status</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                    @if (Model.CurrentAddress.Address != null)
                                                    {
                                                        <tr>
                                                            <td>@Model.CurrentAddress.Address ,@Model.CurrentAddress.City , @Model.CurrentAddress.State , @Model.CurrentAddress.Country - @Model.CurrentAddress.PinCode </td>
                                                            <td>
                                                                @if (Model.CurrentAddress.IsActive == true)
                                                                {
                                                                    <span class="label label-success">Active</span>
                                                                }
                                                                else
                                                                {
                                                                    <span class="label label-warning">Inactive</span>
                                                                }
                                                            </td>
                                                            <td>
                                                                <button type="button" id="editcadd" name="editcadd" class="btn btn-primary waves-effect">
                                                                    <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                                                                    <span><strong>Edit</strong></span>
                                                                </button>
                                                                <button id="btndeletecurrent" type="button" class="btn btn btn-danger waves-effect">
                                                                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                                                    <span><strong>Delete</strong></span>
                                                                </button>

                                                            </td>

                                                        </tr>
                                                    }
                                                </table>
                                            }
                                            else
                                            {
                                                <p>Current Address is not added. Please Create your new address.</p>
                                            }
                                        </div>
                                        @if (Model.CurrentAddress.Address == null)
                                        {
                                            <p>
                                                <button type="button" id="createcadd" name="createcadd" class="btn btn-primary waves-effect">Create New</button>
                                            </p>
                                        }
                                    </div>
                                </div>
                                <div role="tabpanel" class="tab-pane fade in" id="eadd">
                                    <div class="panel-body">
                                        <div style="display:none;" class="panel panel-body" id="createEaddpanel">
                                            <form asp-action="CreateEmergencyAddress" asp-route-pid="@Model.Id" asp-route-EmployeeCode="@Model.EmployeeCode" asp-controller="People" method="post">
                                                @{await Html.RenderPartialAsync("CreateEmergencyAddress", new Emergency()); }
                                                <button type="button" id="eacancel" name="eacancel" class="btn btn-primary m-t-15 waves-effect">Cancel</button>
                                            </form>
                                        </div>
                                        <div style="display:none;" class="panel panel-body" id="editEaddpanel">
                                            <form asp-action="EditEmergencyAddress" asp-controller="People" asp-route-pid="@Model.Id" asp-route-EmployeeCode="@Model.EmployeeCode" method="post">
                                                <div id="editform">
                                                    @{
                                                        await Html.RenderPartialAsync("EditEmergencyAddress", new Emergency());
                                                    }
                                                </div>
                                                <button type="submit" class="btn btn-primary m-t-15 waves-effect">Save</button>
                                                <button type="reset" id="ecancel" name="ecancel" class="btn btn-primary m-t-15 waves-effect">Cancel</button>
                                            </form>
                                        </div>
                                        <div id="eaddtable" class="body table-responsive">
                                            @if (Model.EmergencyAddress.Count > 0 || cookies.Role == "Admin")
                                            {
                                                <table id="etable" name="etable" class="table table-bordered table-hover">
                                                    <tr>
                                                        <th>Address</th>
                                                        <th>Contacts</th>
                                                        <th>Active Status</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                    @foreach (var item in Model.EmergencyAddress)
                                                    {
                                                        <tr>
                                                            <td>
                                                                @item.FirstName @item.LastName<br />
                                                                @item.Address, @item.City, @item.State, @item.Country - @item.PinCode
                                                            </td>
                                                            <td>
                                                                @item.MobileNumber, @item.PhoneNumber
                                                            </td>
                                                            <td>
                                                                @if (@item.IsActive == true)
                                                                {
                                                                    <span class="label label-success">Active</span>
                                                                }
                                                                else
                                                                {
                                                                    <span class="label label-warning">Inactive</span>
                                                                }
                                                            </td>
                                                            <td>
                                                                <div class="row">
                                                                    <div class="col-md-6">
                                                                        <button type="button" id="@item.Id" class="btn btn-primary waves-effect emergency">
                                                                            <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                                                                            <span><strong>Edit</strong></span>
                                                                        </button>
                                                                        <button id="@item.Id" type="button" class="btn btn btn-danger waves-effect delete">
                                                                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                                                            <span><strong>Delete</strong></span>
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    }
                                                </table>
                                            }
                                            else
                                            {
                                                <p>Emergency Address is not added. Please Create your new address.</p>
                                            }
                                        </div>
                                        <p>
                                            <button type="button" id="createEadd" name="createEadd" class="btn btn-primary waves-effect">Create New</button>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="~/lib/bootstrap/dist/js/responsive-tabs.js"></script>
    <script src="~/plugins/bootbox/bootbox.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
</body>
</html>



<script>
    $(document).ready(function () {
        if ('@TempData["success"]' != '') {
            bootbox.alert({
                message: '@TempData["success"]'
            });
        }
        var TimeIn = document.getElementById('InTime').value;
        var TimeOut = document.getElementById('OutTime').value;
        var estTimeOut = document.getElementById('estimatedTimeOut').value;
        var totalHrs = document.getElementById('totalHours').value;
        var ci = document.getElementById('clockIn');
        if (ci != null) {
            if (TimeIn != '00:00:00') {
                document.getElementById('clockIn').innerHTML = "Clock In </br>" + TimeIn;
                $('#clockIn').attr('disabled', 'disabled');
            }
        }
        var co = document.getElementById('clockOut');
        if (co != null) {
            if (TimeOut != '00:00:00') {
                document.getElementById('clockOut').innerHTML = "Clock Out </br>" + TimeOut;
            }
        }
        var et = document.getElementById('eTOut');
        if (et != null) {
            if (estTimeOut != '00:00:00') {
                document.getElementById('eTOut').innerHTML = "Estimated time out : " + estTimeOut;
            }
        }
        var th = document.getElementById('tWHrs');
        if (th != null) {
            if (totalHrs != '00:00:00') {
                document.getElementById('tWHrs').innerHTML = "Total hours </br>" + totalHrs;
            }
        }


        $('.collapse.in').prev('.panel-heading').addClass('active');
        $('#accordion, #bs-collapse')
            .on('show.bs.collapse', function (a) {
                $(a.target).prev('.panel-heading').addClass('active');
            })
            .on('hide.bs.collapse', function (a) {
                $(a.target).prev('.panel-heading').removeClass('active');
            });
     @if (cookies.Role == "Admin" && Model.OtherAddress.Count > 0)
{
    foreach (var other in Model.OtherAddress)
    {
        if (other.AddressType == "Permanent Address")
        {
            @:var tblRow = '<tr><td>@other.Address, @other.City, @other.State, @other.Country - @other.PinCode</td><td><span class="label label-warning">Inactive</span></td><td>Address Has been deleted</td></tr>';
            @:$("#ptable").append(tblRow);
        }
        else if (other.AddressType == "Current Address")
        {
            @:var tblRow = '<tr><td>@other.Address, @other.City, @other.State, @other.Country - @other.PinCode</td><td><span class="label label-warning">Inactive</span></td><td>Address Has been deleted</td></tr>';
            @:$("#ctable").append(tblRow);
        }
        else if (other.AddressType == "Emergency Address")
        {
            @:var tblRow = '<tr><td>@other.Address, @other.City, @other.State, @other.Country - @other.PinCode</td><td>@other.PhoneNumber </td><td><span class="label label-warning">Inactive</span></td><td>Address Has been deleted</td></tr>';
            @:$("#etable").append(tblRow);
        }
    }
}
    });
    $('ul.nav.nav-tabs  a').click(function (e) {
        e.preventDefault();
        $(this).tab('show');
    });
    $("#createpadd").click(function () { 'Create New';
        $("#createpadd").hide();
        $("#paddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#createpaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });
    $("#editpadd").click(function () {
        $("#paddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#editpaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });
    $("#pacancel").click(function () {
        $("#paddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#createpaddpanel").slideToggle({
            direction: "up"
        }, 300);
        $("#createpadd").show();
    });
    $("#pcancel").click(function () {
        $("#paddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#editpaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });

    $("#btndeletepermanent").click(function () {
        bootbox.confirm({
            title: "Delete Address?",
            message: "Do you want to remove this record?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result == true) {
                    $.ajax({
                        url: '@Url.Action("DeletePermanentAddress", "People")?perid=' +@Model.PermanentAddress.Id,
                        success: function (Data) {
                            bootbox.alert(
                                "Record Deleted Successfully!",
                                function () {
                                    window.location.reload();
                                }
                            );
                            $("#padd").load(document.URL + ' #padd');

                        },

                    });
                }
            }
        });
    });
    $("#createcadd").click(function () {
        $("#createcadd").hide();
        $("#caddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#createcaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });
    $("#editcadd").click(function () {
        $("#caddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#editcaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });
    $("#ccancel").click(function () {
        $("#caddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#editcaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });
    $("#cacancel").click(function () {
        $("#caddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#createcaddpanel").slideToggle({
            direction: "up"
        }, 300);
        $("#createcadd").show();
    });

    $("#btndeletecurrent").click(function () {
        bootbox.confirm({
            title: "Delete Address?",
            message: "Do you want to remove this record?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result == true) {
                    $.ajax({
                        url: '@Url.Action("DeleteCurrentAddress", "People")?cid=' +@Model.CurrentAddress.Id,
                        success: function (Data) {
                            bootbox.alert(
                                "Record Deleted Successfully!",
                                function () {
                                    window.location.reload();
                                }
                            );
                            $("#cadd").load(document.URL + ' #cadd');

                        },
                    });
                }
            }
        });
    });

    $("#createEadd").click(function () {
        $("#createEadd").hide();
        $("#eaddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#createEaddpanel").slideToggle({
            direction: "up"
        }, 300);
    });

    var buttons = document.getElementsByClassName('btn btn-primary waves-effect emergency');
    for (var i = 0; i < buttons.length; i++) {
            buttons[i].addEventListener("click", function () {
            var j = $(this).attr('id');
            $("#eaddtable").slideToggle({
                direction: "down"
            }, 300);
            $("#editEaddpanel").slideToggle({
                direction: "up"
            }, 300);
            $.ajax({
                url: '@Url.Action("EditEmergencyAddress", "People")?eid=' + j,
                type: 'get',
                success: function (Data) {
                    $("#editform").html(Data);
                }
            });
            $("#createEadd").hide();
        });
    }


    $("#ecancel").click(function () {
        $("#eaddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#editEaddpanel").slideToggle({
            direction: "up"
        }, 300);
        $("#createEadd").show();
    });
    $("#eacancel").click(function () {
        $("#eaddtable").slideToggle({
            direction: "down"
        }, 300);
        $("#createEaddpanel").slideToggle({
            direction: "up"
        }, 300);
        $("#createEadd").show();
    });

    var buttons = document.getElementsByClassName('btn btn btn-danger waves-effect delete');
    for (var i = 0; i < buttons.length; i++) {
        buttons[i].addEventListener("click", function () {
            var j = $(this).attr('id');
            bootbox.confirm({
                title: "Delete Address?",
                message: "Do you want to remove this record?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result == true) {
                        $.ajax({
                            url: '@Url.Action("DeleteEmergencyAddress", "People")?eid=' + j,
                            success: function (Data) {
                                bootbox.alert(
                                    "Record Deleted Successfully!",
                                    function () {
                                        window.location.reload();
                                    }
                                );

                                $("#eadd").load(document.URL + ' #eadd');

                            },

                        });
                    }
                }
            });
        });
    }
    $('#btnSubmit').click(function () {
        var form = $("#cp");
        $.validator.unobtrusive.parse(form);
        if (form.valid()) {
            var d = form.serialize();
            $.ajax({
                url: '@Url.Action("CreatePermanentAddress", "People")?pid=' +@Model.Id+'&data=' + d,
                type: 'POST',
                success: function (data) {
                    window.top.location.reload(false);
                    bootbox.alert({
                        message: "Address Saved Successfully!"
                    });
                }
            });
        }
        return false;
    });
   
</script>


@model IEnumerable<EIS.Entities.Employee.Person>
@using EIS.WebApp.Services

<head>
    <link href="~/Ems/css/rowReorder.dataTables.min.css" rel="stylesheet" />
    <link href="~/Ems/css/responsive.dataTables.min.css" rel="stylesheet" />
    <link href="~/Ems/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Ems/css/buttons.dataTables.min.css" rel="stylesheet" />
    <script src="~/lib/bootstrap/dist/js/bootbox.js"></script>
    <style>
        li:hover {
            cursor: pointer;
        }
    </style>
</head>

@{
    string rootPath = MyHttpContext.AppBaseUrl;
    string APIURL = MyHttpContext.APIBaseURL;
    if (ViewBag.Message != null)
    {
        <script>
            bootbox.alert({
                message: "@ViewBag.Message"
            });
        </script>
        ViewBag.Message = null;
    }
}

<div class="container-fluid">
    <div class="block-header">
        <div class="row">
            <div class="col-md-12">
                <HeaderWithButton header-name="Employee List" btn-href="location.href='@rootPath/People/Create'" btn-text="Create" icon-name="person_add"></HeaderWithButton>
            </div>
        </div>
    </div>

    <div class="row clearfix">
        <div class="row">
            <div class="col-md-9" style="height:50px">
                <div class="col-md-4 col-sm-6 col-xs-12">
                    <select id="locations" asp-items="@(new SelectList(@ViewBag.Locations,"Id","LocationName"))" class="form-control show-tick">
                        <option value="0">All</option>
                    </select>
                </div>
                <div class="col-md-4 col-sm-6 col-xs-12">
                    <select class="form-control show-tick" id="select">
                        <option id="active" value="active">Active</option>
                        <option id="inActive" value="inActive">InActive</option>
                    </select>
                </div>

            </div>
            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="card">
                    <div class="body">
                        <table id="example" class="table table-striped table-bordered dt-responsive" style="width:100%">
                            <thead>
                                <tr>
                                    <th>Location</th>
                                    <th>Employee Code</th>
                                    <th>Name</th>
                                    <th>Image</th>
                                    <th>Gender</th>
                                    <th>DOB</th>
                                    <th>Mobile Number</th>
                                    <th>Email Address</th>
                                    <th>Joining Date</th>
                                    @*<th>Created By</th>*@
                                    <th>Actions</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
</div>
<style>
    .dataTables_wrapper .myexport .dt-buttons {
        float: right;
    }
</style>

<script>
    $('#example').on('click', 'a.inactive', function (e) {
        e.preventDefault();
        var id = $(this).attr("id");
        var message = "<h4>Do you want to delete this record ?</h4>"
        bootbox.confirm(message, function (result) {
            if (result == true) {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("DeleteConfirmed", "People")?id=' + id,
                    success: function () {
                        bootbox.alert("<h4>Record deleted successfully!</h4>", function () {
                            location.href = '@Url.Action("Index", "People")';
                        });
                    },
                    error: function (xhr, status, error) {
                        if (xhr.status == 401) {
                            bootbox.alert("<h4>Access denied..Unable to Delete the Record</h4>");
                        } else {
                            bootbox.alert("<h4>Unable to Delete the Record</h4>");
                        }
                    }
                });
            }
        });
    });
    $('#example').on('click', 'a.active', function (e) {
        e.preventDefault();
        var id = $(this).attr("id");
        var message = "<h4>Do you want to activate Employee record ?</h4>"
        bootbox.confirm(message, function (result) {
            if (result == true) {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("ActivateEmployee", "People")?EmployeeCode=' + id,
                    data: null,
                    success: function () {
                        bootbox.alert("<h4>Record activated successfully!</h4>", function () {
                            location.href = '@Url.Action("Index", "People")';
                        });
                    },
                    error: function () {
                        bootbox.alert("<h4>Unable to Activate Data");
                    }                    
                });
            }
        });
    });
    $('#locations').on('change', function () {
        var c = $('#locations').val();
        var v = $('#select').val();
        if (v == "active") {
            b = true;
        }
        else if (v == "inActive") {
            b = false;
        }
        generateReport(b, c);
    });
    $('#select').on('change', function () {
        var c = $('#locations').val();
        var v = $('#select').val();
        var b;
        if (v == "active") {
            b = true;
            generateReport(b,c);
        }
        else if (v == "inActive") {
            b = false;
            generateReport(b,c);
        }
    });
    $(document).ready(function () {
       
        var b = true;
        generateReport(b,0);
    });
    function generateReport(b,c) {
        $.fn.dataTable.ext.errMode = 'none';
        $('#example').on('error.dt', function () {
            bootbox.alert('<h4>Unable to load data from Server. Please try after sometime</h4>');
        }).DataTable();
        $('#example').DataTable().destroy();
        $('#example tbody').empty();

        debugger;
        var dTable = $('#example').DataTable({
            sDom: '<"myexport"B>ifrtlp',
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            buttons: [
                {
                    extend: 'pdfHtml5',
                    title: 'EMPLOYEE REPORT',
                    text: 'Export',
                    titleAttr: 'Export to Pdf',
                    exportOptions: {
                        columns: [0, 1,3,4,5,6,7]
                    }
                }
            ],
            "aoColumnDefs": [
                { "aTargets": [0], "bSortable": true },
                { "aTargets": [1], "bSortable": true },
                { "aTargets": ['_all'], "bSortable": false }
            ],
            lengthMenu: [
                [5, 10, 25, -1],
                ['5', '10', '25', 'All']
            ],
            ajax: {
                "url": '@Url.Action("LoadData", "People")?type='+b+'&LocationId='+c,
                "type": "POST",
                "datatype": "json"//,
                //"data": { "type": b }
            },
            "columns": [
                {
                    "data": "LocationId", "name": "LocationId", "autoWidth": true, "render": function (data, type, row) {
                        return row.Location.LocationName;
                    }
                },
                { "data": "EmployeeCode", "name": "EmployeeCode", "autoWidth": true },
                {
                    "data": "FirstName", "name": "FirstName", "autoWidth": true, "render": function (data, type, row) {
                        return row.FullName;
                    }
                },
                {
                    "data": "Image", "name": "Image", "autoWidth": true, "render": function (data, type, row) {
                        return '<img  src="@MyHttpContext.AppBaseUrl/EmployeeData/' + row.TenantId + row.EmployeeCode + '/Image/' + data + '" style="height:40px; weight:40px">';
                    }
                },
                {
                    "data": "Gender", "name": "Gender", "autoWidth": true, "render": function (data) {
                        if (data == "0") {
                            return "Male";
                        } else { return "Female"; }

                    }
                },
                {
                    "data": "DateOfBirth", "name": "DateOfBirth", "autoWidth": true, "render": function (data) {
                        data = moment(data).format('DD MMM YYYY');
                        return data;
                    }
                },
                { "data": "MobileNumber", "name": "MobileNumber", "autoWidth": true },
                { "data": "EmailAddress", "name": "EmailAddress", "autoWidth": true },
                {
                    "data": "JoinDate", "name": "JoinDate", "autoWidth": true, "render": function (data) {
                        data = moment(data).format('DD MMM YYYY');
                        return data;
                    }
                },
                @*{
                    "data": "CreatedBy", "name": "CreatedBy", "autoWidth": true, "render": function (data, type, row) {
                        var result = null;
                        $.getJSON("@APIURL/api/Employee/CreatedBy/" + row.CreatedBy + "", function (data) {
                            result = data;
                        });
                        return result;
                    }
                },*@
                {
                    data: null, "autoWidth": true, render: function (data, type, row) {
                        var value = row.IsActive;
                        if (value == true) {
                            return '<div class="dropdown"> <button class="btn btn-primary dropdown-toggle waves-effect" type="button" data-toggle="dropdown"><i class="material-icons">build</i></button><ul class="dropdown-menu pull-right"><li><a href="@Url.Action("Profile","People")?PersonId=' + row.EmployeeCode + '">Profile</a></li><li><a class="inactive" id=' + row.Id + '>Delete</a></li></ul></div>';
                        } else {
                            return '<div class="dropdown"> <button class="btn btn-primary dropdown-toggle waves-effect" type="button" data-toggle="dropdown"><i class="material-icons">build</i></button><ul class="dropdown-menu pull-right"><li><a class="active" id=' + row.EmployeeCode + '>Activate</a></li></ul></div>';
                        }
                    }
                }
            ],
            "initComplete": function () {
                var $searchInput = $('div.dataTables_filter input');
                $searchInput.unbind();
                $searchInput.bind('keyup', function (e) {
                    if (this.value.length >= 3 || this.value.length == 0) {
                        dTable.search(this.value).draw();
                    }
                });
            },
        });
    };
    function getCreatedBy(pid) {
        var result = null;
        $.getJSON("@APIURL/api/Employee/CreatedBy/" + pid + "", function (data) {
            result = data;

        });

        return result;

    }

</script>
<script src="~/Ems/js/jquery.dataTables.min.js"></script>
<script src="~/Ems/js/dataTables.buttons.min.js"></script>
<script src="~/Ems/js/buttons.flash.min.js"></script>
<script src="~/Ems/js/jszip.min.js"></script>
<script src="~/Ems/js/pdfmake.min.js"></script>
<script src="~/Ems/js/vfs_fonts.js"></script>
<script src="~/Ems/js/buttons.html5.min.js"></script>
<script src="~/Ems/js/buttons.print.min.js"></script>
<script src="~/Ems/js/dataTables.rowReorder.min.js"></script>
<script src="~/Ems/js/dataTables.responsive.min.js"></script>


<script src="~/plugins/jquery-datatable/skin/bootstrap/js/dataTables.bootstrap.js"></script>
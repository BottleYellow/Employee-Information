@using EIS.WebApp.Services
@model IEnumerable<EIS.Entities.Employee.Person>
<head>
    <title>Attendance Summary</title>
    <link href="~/Ems/css/responsive.dataTables.min.css" rel="stylesheet" />
    <link href="~/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.css" rel="stylesheet" />
    <link href="~/lib/bootstrap/dist/css/bootstrap-datetimepicker1.css" rel="stylesheet" />
    @*for pdf*@
    <link href="~/Ems/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Ems/css/buttons.dataTables.min.css" rel="stylesheet" />
    <link href="~/css/customStyle.css" rel="stylesheet" />
    <style type="text/css">

        .bootstrap-datetimepicker-widget tr:hover {
            background-color: #808080;
        }

        .dataTables_wrapper .myexport .dt-buttons {
            float: right;
        }

        div .panel-primary {
            text-align: center
        }

        .container-fluid {
            padding-left: 0px;
            padding-right: 0px;
        }

        #locations, #generateReport {
            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
        }

        #select, #status {
            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
        }

        #inputyear, #inputmonth, #inputweek {
            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
        }

        table.dataTable td {
            margin-left: 0;
            margin-right: auto;
            padding: 3px 10px;
            width: 1px;
            white-space: nowrap;
        }


        a:hover {
            cursor: pointer;
        }

        a.hoverNonUnderline {
            color: black;
            text-decoration: none;
        }

        a.hoverUnderline {
            color: blue;
            text-decoration: underline;
        }

        .ajax-loader {
            visibility: hidden;
            position: absolute;
            z-index: +100 !important;
            width: 80%;
            height: 80%;
        }

        .tooltip-inner {
            white-space: pre-wrap;
            width: auto !important;
            max-height: 500px !important;
            overflow-y: scroll;
            max-width: 100%;
        }

        .ajax-loader img {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
    </style>
</head>
<body>
    <div class="ajax-loader">
        <img src="~/gif/Spinner.gif" />
    </div>
    <div class="container-fluid">
        <div class="block-header">
            <HeaderWithButton header-name="Attendance Summary"></HeaderWithButton>
        </div>
        <div class="row clearfix">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="card">
                    <div class="body">
                        <div class="row col-md-12" id="headeropt">
                            <div class="col-xs-12 cod-sm-6 col-md-2">
                                <label>Select Location</label>
                                <select id="locations" asp-items="@(new SelectList(@ViewBag.Locations,"Id","LocationName"))" class="form-control show-tick">
                                    <option value="0">All</option>
                                </select>
                            </div>
                            <div class="col-xs-12 cod-sm-6 col-md-2">
                                <label>Select Status</label>
                                <select id="status" class="form-control show-tick">
                                    <option value="true">Active</option>
                                    <option value="false">InActive</option>
                                </select>
                            </div>
                            <div class="col-xs-12 cod-sm-6 col-md-2">
                                <label>Select Type</label>
                                <select class="form-control" id="select">
                                    <option value="year" id="year">Year</option>
                                    <option selected value="month" id="month">Month</option>
                                    @*<option value="week" id="week">Week</option>*@
                                </select>
                            </div>
                            <div class="col-xs-12 cod-sm-6 col-md-2">
                                <div id="inputyeardiv" hidden="hidden">
                                    <label>Select Year</label><br />
                                    <input class="form-control" type="text" id="inputyear" placeholder="select year" autocomplete="off" />
                                </div>
                                <div id="inputmonthdiv">
                                    <label>Select Month</label><br />
                                    <input class="form-control" type="text" id="inputmonth" placeholder="select month" autocomplete="off" />
                                </div>
                            </div>
                            <div class="col-xs-12 cod-sm-6 col-md-2">
                                <br />
                                <input class="form-control" type="button" id="generateReport" value="Generate" style="font-weight:bold; font-size:16px; height:40px; background-color:#3399ff; color:white;" />
                            </div>
                        </div>
                        <div>
                            <div></div>
                            <div>
                                <table id="example" class="table table-striped table-bordered" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>Location</th>
                                            <th>Name</th>
                                            <th>Total Working Days</th>
                                            <th>Present Days</th>
                                            <th>Leaves Taken</th>
                                            <th>Absent Days</th>
                                            <th>Total Absent Days</th>
                                            <th>Compensated Leaves</th>
                                            <th>Salary Deducted</th>
                                            @*<th>Pending for Deduction</th>*@
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
@*for datetimepicker*@
<script src="~/Ems/js/moment.min.js"></script>
<script src="~/Ems/js/bootstrap-datetimepicker.min.js"></script>
<script src="~/lib/bootstrap/dist/js/moment1.js"></script>
@*for pdf*@
<script src="~/Ems/js/moment.js-2.8.4-moment.min.js"></script>

<script src="~/Ems/js/toastr.js"></script>
<script src="~/lib/bootstrap/dist/js/bootbox.js"></script>
<script src="~/js/TWeeklyOffCount.js"></script>
<script src="~/Ems/js/cdnjs_cloudflare_ajax_libs_jszip_3_1_3_jszip_min.js"></script>
<script src="~/Ems/js/jquery.dataTables.min.js"></script>
<script src="~/Ems/js/dataTables.buttons.min.js"></script>
<script src="~/Ems/js/buttons.flash.min.js"></script>
<script src="~/Ems/js/jszip.min.js"></script>
<script src="~/Ems/js/pdfmake.min.js"></script>
<script src="~/Ems/js/vfs_fonts.js"></script>
<script src="~/Ems/js/buttons.html5.min.js"></script>
<script src="~/Ems/js/buttons.print.min.js"></script>
<script src="~/Ems/js/dataTables.responsive.min.js"></script>
<script src="~/plugins/jquery-datatable/skin/bootstrap/js/dataTables.bootstrap.js"></script>



<script type="text/javascript">

    $(document).ready(function () {
        $('#locations').val(2);
        var data =@Html.Raw(Json.Serialize(ViewBag.Locations))
        var currentDate = new Date();
        var m = ((currentDate.getMonth() + 1) >= 10) ? (currentDate.getMonth() + 1) : '0' + (currentDate.getMonth() + 1);
        var date = new Date();
        var cMonth = date.getMonth();
        var cDate = date.getDate();
        var cYear = date.getFullYear();

        $('#inputmonth').datetimepicker({
            format: "MM/YYYY",
            maxDate: new Date(cYear, cMonth, cDate)
        });
        var y = new Date().getFullYear();
        var ld = new Date(y, m, 0).getDate();

        $('#inputmonth').val(m + '/' + y);
        var location = $('#locations').val();
        var status = $('#status').val();
        generateReport(m + '/' + y, 'month', location, status);


        $('#select').on('change', function () {
            var v = $('#select').val();
            if (v === 'year') {
                var date = new Date();
                var cMonth = date.getMonth();
                var cDate = date.getDate();
                var cYear = date.getFullYear();
                $('#inputyear').val(y);
                $('#inputyeardiv').show();
                $('#inputmonthdiv').hide();
                $('#inputyear').datetimepicker({
                    format: "YYYY",
                    maxDate: new Date(cYear, cMonth, cDate)
                });
            }
            else if (v === 'month') {
                date = new Date();
                cMonth = date.getMonth();
                cDate = date.getDate();
                cYear = date.getFullYear();
                $('#inputmonthdiv').show();
                $('#inputyeardiv').hide();
                $('#inputmonth').datetimepicker({
                    format: "MM/YYYY",
                    maxDate: new Date(cYear, cMonth, cDate)
                });
            }
        });

        $('#generateReport').on('click', function () {
            var v = $('#select').val();
            var location = $('#locations').val();
            var status = $('#status').val();
            if (v === 'year') {
                var value = $("#inputyear").val();
                generateReport(value, 'year', location, status);
            }
            else if (v === 'month') {
                value = $("#inputmonth").val();
                $("#inputmonth").val(value);
                generateReport(value, 'month', location, status);


            }
        });

        function generateReport(value, type, location,status) {
            $.ajax({
                url: '@Url.Action("AttendanceSummary","Attendance")',
                type: "POST",
                datatype: "json",
                data: { "date": value, "type": type, "location": location, "status": status },
                beforeSend: function () {
                    $('.ajax-loader').css("visibility", "visible");
                },
                success: function (data) {
                    var array = [];
                    for (var i = 0; i < data.sP_GetAttendanceCountReports.length; i++) {
                        var PresentDays = "";
                        var valueExtraWorking = "";
                        var AbsentDays = "";
                        var valueTaken = "";
                        var totalLeavesTaken = "";
                        var ExtraWorking = "";
                        var Present = "";
                        var Absent = "";
                        var DeductedCount = 0;
                        var PendingDeducted = 0;
                        for (var j = 0; j < data.SP_GetMonthlyAttendanceData.length; j++) {
                            if (data.sP_GetAttendanceCountReports[i].EmployeeCode === data.SP_GetMonthlyAttendanceData[j].EmployeeCode) {
                                if (data.SP_GetMonthlyAttendanceData[j].Status === "Present") {
                                    if (data.SP_GetMonthlyAttendanceData[j].TimeOut === null) {
                                        PresentDays += moment(data.SP_GetMonthlyAttendanceData[j].DateIn).format("DD-MMM-YYYY") + "(" + moment(data.SP_GetMonthlyAttendanceData[j].TimeIn, 'HH:mm:ss').format('HH:mm') + "-NA" + ")" + "&#10;";
                                    }
                                    else {
                                        PresentDays += moment(data.SP_GetMonthlyAttendanceData[j].DateIn).format("DD-MMM-YYYY") + "(" + moment(data.SP_GetMonthlyAttendanceData[j].TimeIn, 'HH:mm:ss').format('HH:mm') + "-" + moment(data.SP_GetMonthlyAttendanceData[j].TimeOut, 'HH:mm:ss').format('HH:mm') + ")" + "&#10;";
                                    }

                                } else if (data.SP_GetMonthlyAttendanceData[j].Status !== null && data.SP_GetMonthlyAttendanceData[j].Status.startsWith("Absent")) {
                                    if (data.SP_GetMonthlyAttendanceData[j].Status.includes("Without Pay")) {
                                        if (data.SP_GetMonthlyAttendanceData[j].HrStatus !== null && data.SP_GetMonthlyAttendanceData[j].HrStatus.startsWith('Deducted')) {
                                            DeductedCount++;
                                        } else {
                                            PendingDeducted++;
                                        }
                                        AbsentDays += moment(data.SP_GetMonthlyAttendanceData[j].DateIn).format("DD-MMM-YYYY") + " (Without Pay)" + "&#10;";
                                    } else {
                                        AbsentDays += moment(data.SP_GetMonthlyAttendanceData[j].DateIn).format("DD-MMM-YYYY") + "&#10;";
                                    }

                                }
                            }
                        }

                        for (var k = 0; k < data.sP_GetAttendanceLeaveDatas.length; k++) {
                            if (data.sP_GetAttendanceCountReports[i].EmployeeCode === data.sP_GetAttendanceLeaveDatas[k].EmployeeCode) {
                                if (data.sP_GetAttendanceLeaveDatas[k].DateStatus === "Adjusted") {
                                    valueExtraWorking += moment(data.sP_GetAttendanceLeaveDatas[k].Date).format("DD-MMM-YYYY") + data.sP_GetAttendanceLeaveDatas[k].Reason + "&#10;";
                                }
                                else if (data.sP_GetAttendanceLeaveDatas[k].DateStatus !== null && data.sP_GetAttendanceLeaveDatas[k].DateStatus.startsWith("Taken")) {
                                    if (data.sP_GetAttendanceLeaveDatas[k].DateStatus.includes("WithoutPay") && data.sP_GetAttendanceLeaveDatas[k].HrStatus !== null && data.sP_GetAttendanceLeaveDatas[k].HrStatus.startsWith('Deducted')) {
                                        DeductedCount++;
                                    } else if (data.sP_GetAttendanceLeaveDatas[k].DateStatus.includes("WithoutPay") && data.sP_GetAttendanceLeaveDatas[k].HrStatus === null){
                                        PendingDeducted++;
                                    }
                                    valueTaken += moment(data.sP_GetAttendanceLeaveDatas[k].Date).format("DD MMM YYYY") + "-" + data.sP_GetAttendanceLeaveDatas[k].Reason + "&#10;";
                                }
                            }
                        }
                        if (data.sP_GetAttendanceCountReports[i].PresentDays === 0) {
                            Present = '<div><a class="test hoverNonUnderline" data-toggle="tooltip" data-placement="right" data-html="true"  title="' + PresentDays + '">' + data.sP_GetAttendanceCountReports[i].PresentDays + '</a></div>';
                        }
                        else {
                            Present = '<div><a class="test hoverUnderline" data-toggle="tooltip" data-placement="right" data-html="true"  title="' + PresentDays + '">' + data.sP_GetAttendanceCountReports[i].PresentDays + '</a></div>';
                        }
                        if (data.sP_GetAttendanceCountReports[i].AbsentDay === 0) {
                            Absent = '<div><a class="test hoverNonUnderline" data-toggle="tooltip" data-placement="right" data-html="true"  title="' + AbsentDays + '">' + data.sP_GetAttendanceCountReports[i].AbsentDay + '</a></div>';;
                        }
                        else {
                            Absent = '<div><a class="test hoverUnderline" data-toggle="tooltip" data-placement="right" data-html="true"  title="' + AbsentDays + '">' + data.sP_GetAttendanceCountReports[i].AbsentDay + '</a></div>';;
                        }
                        if (data.sP_GetAttendanceCountReports[i].NoLeave === 0) {
                            totalLeavesTaken = '<div><a class="test hoverNonUnderline" title="' + valueTaken + '" data-toggle="tooltip" data-placement="right" data-html="true">' + data.sP_GetAttendanceCountReports[i].NoLeave + '</a></div>';
                        }
                        else {
                            totalLeavesTaken = '<div><a class="test hoverUnderline" title="' + valueTaken + '" data-toggle="tooltip" data-placement="right" data-html="true" >' + data.sP_GetAttendanceCountReports[i].NoLeave + '</a></div>';
                        }
                        if (data.sP_GetAttendanceCountReports[i].ExtraWorkingDays === 0) {
                            ExtraWorking = '<div><a class="test hoverNonUnderline" title="' + valueExtraWorking + '" data-toggle="tooltip" data-placement="right" data-html="true">' + data.sP_GetAttendanceCountReports[i].ExtraWorkingDays + '</a></div>';
                        }
                        else {
                            ExtraWorking = '<div><a class="test hoverUnderline" title="' + valueExtraWorking + '" data-toggle="tooltip" data-placement="right" data-html="true">' + data.sP_GetAttendanceCountReports[i].ExtraWorkingDays + '</a></div>';
                        }
                        //var proposedLeaves = '<div><a class="test"  data-toggle="tooltip" data-placement="right" data-html="true" title="' + valueProposed + '">' + data.sP_GetAttendanceCountReportsNew[i].ProposedLeaves + '</a></div>';
                        //if (data.sP_GetAttendanceCountReportsNew[i].LeavesWithoutPay === 0) {
                        //    leaveWithoutPay = data.sP_GetAttendanceCountReportsNew[i].LeavesWithoutPay;
                        //} else {
                        //    leaveWithoutPay = '<div class="dropdown"><a class="test" data-toggle="tooltip" data-placement="right" data-html="true" title="' + valueWithOutPay + '">' + data.sP_GetAttendanceCountReportsNew[i].LeavesWithoutPay + ' </a><button class="btn btn-primary dropdown-toggle waves-effect" type="button" data-toggle="dropdown"><i class="material-icons">update</i></button><ul class="dropdown-menu"><li><a class="disabledLink">Deduct from salary</a></li></ul></div>';
                        //}
                        array.push([data.sP_GetAttendanceCountReports[i].LocationName, DecorateString(data.sP_GetAttendanceCountReports[i].EmployeeName), data.sP_GetAttendanceCountReports[i].WorkingDay, /*Present*/ data.sP_GetAttendanceCountReports[i].PresentDays, /*data.sP_GetAttendanceCountReports[i].NoLeave*/totalLeavesTaken, Absent, (data.sP_GetAttendanceCountReports[i].AbsentDay + data.sP_GetAttendanceCountReports[i].NoLeave), ExtraWorking, data.sP_GetAttendanceCountReports[i].DeductedDays]);
                    }
                    var title = '';
                    if (type === 'year') {
                        title = 'Attendance Report (Year ' + value + ')';
                    } else {
                        title = 'Attendance Report (Month ' + value + ')';
                    }

                    $('#example').DataTable().destroy();
                    $('#example').DataTable({
                        sDom: '<"myexport"B>ifrtlp',
                        scrollY: "300px",
                        scrollX: true,
                        scrollCollapse: true,
                        paging: false,
                        order: [0, 'asc'],
                        'columnDefs': [
                            {
                                "targets": [2,3,4,5,6], // your case first column
                                "className": "text-center",
                            }
                        ],
                        buttons: [
                            {
                                extend: 'pdfHtml5',
                                title: title,
                                text: 'Pdf',
                                titleAttr: 'Export to Pdf',
                                customize: function (doc) {
                                    doc.defaultStyle.alignment = 'center';
                                    doc.styles.tableHeader.alignment = 'center';
                                }
                            },
                            {
                                extend: 'excel',
                                title: title,
                                text: 'Excel',
                                titleAttr: 'Export to Excel ',
                                customize: function (xlsx) {
                                    var sheet = xlsx.xl.worksheets['sheet1.xml'];
                                    $('row c[r^="C"]', sheet).attr('s', '51');
                                    $('row c[r^="D"]', sheet).attr('s', '51');
                                    $('row c[r^="E"]', sheet).attr('s', '51');
                                    $('row c[r^="F"]', sheet).attr('s', '51');
                                    $('row c[r^="G"]', sheet).attr('s', '51');
                                }

                            },
                            {
                                extend: 'print',
                                title: title,
                                text: 'Print',
                                titleAttr: 'Print'
                            }],
                        data: array,
                        "drawCallback": function (settings) {
                            $('[data-toggle="tooltip"]').tooltip({
                                container: 'body'
                            });
                        }
                    });
                },
                complete: function () {
                    $('.ajax-loader').css("visibility", "hidden");
                }

            });
        }
    });
    $('.exampleClass').on('shown.bs.collapse', function () {
        $($.fn.dataTable.tables(true)).DataTable()
            .columns.adjust();
    });
</script>

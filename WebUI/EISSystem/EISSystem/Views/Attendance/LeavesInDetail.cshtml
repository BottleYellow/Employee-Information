@model EIS.Entities.SP.LeavesInDetail;
@using EIS.WebApp.Services
@using EIS.Entities.OtherEntities;
@using Newtonsoft.Json

@using Microsoft.AspNetCore.Http;
@{
    string rootPath = MyHttpContext.AppBaseUrl;
    string APIURL = MyHttpContext.APIBaseURL;
    string cookiesdata = Context.Session.GetString("CookieData");

    CookieModel cookies = new CookieModel();
    if (cookiesdata != null)
    {
        cookies = JsonConvert.DeserializeObject<CookieModel>(cookiesdata);
    }
}

<head>
    <link href="~/Ems/css/responsive.dataTables.min.css" rel="stylesheet" />
    <link href="~/Ems/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Ems/css/buttons.dataTables.min.css" rel="stylesheet" />
    <link href="~/plugins/FixedColumns-3.2.5/css/fixedColumns.dataTables.min.css" rel="stylesheet" />
    <link href="~/css/customStyle.css" rel="stylesheet" />
    <style>
        /*#LeaveDetails_wrapper .dataTables_scroll .dataTables_scrollHead .dataTables_scrollHeadInner {
            width: 100% !important;
        }

            #LeaveDetails_wrapper .dataTables_scroll .dataTables_scrollHead .dataTables_scrollHeadInner table {
                width: 100% !important;
            }*/

        li:hover {
            cursor: pointer;
        }

        .dataTables_wrapper .myexport .dt-buttons {
            float: right;
        }


        table.dataTable td {
            padding: 3px 10px;
            width: 1px;
            white-space: nowrap;
        }

        .container-fluid {
            padding-left: 0px;
            padding-right: 0px;
        }
    </style>
</head>


<div id="md" class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <HeaderWithButton header-name="Leaves In Detail"></HeaderWithButton>
        </div>
        <div class="modal-body">
            <b style="color:black;">Employee Code : @Model.EmployeeCode</b><br />
            <b style="color:black;">Employee Name : @Model.EmployeeName</b>
            <div class="table-responsive">
                <table id="LeaveDetails" class="table table-bordered table-striped table-hover order-column" style="width:100%">
                    <thead>
                        <tr>
                            <th>Sr. No</th>
                            <th>Leave / Absent Date</th>
                            <th>Reason</th>
                            <th>Paid / Unpaid</th>
                            <th>Deduction Status</th>
                            <th>Date of Deduction</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.sP_GetLeavesInDetail)
                        {
                            <tr>
                                <td>
                                    @item.Id
                                </td>
                                <td>
                                    @Convert.ToDateTime(item.Date).ToString("dd MMM yyyy")
                                </td>
                                <td>
                                    @item.Reason
                                </td>
                                <td>
                                    @item.PaidStatus
                                </td>
                                <td>
                                    @if (item.HrStatus == null)
                                    {
                                        if (item.PaidStatus == "Without Pay" && cookies.Role == "Admin")
                                        {
                                            <button onclick="javascript: deductButton('@Model.EmployeeCode','@item.Date');" class="btn btn-warning">Deduct from salary</button>
                                        }
                                        @*<a onclick="javascript:test(\'' + data.sP_GetAttendanceCountReportsNew[i].EmployeeCode + '\',\'' + data.sP_GetAttendanceCountReportsNew[i].LeavesWithoutPay + '\',\'' + x + '\')">Deduct from salary</a>*@
                                        else
                                        {
                                            <span>-</span>
                                        }
                                    }
                                    else
                                    {
                                        @item.HrStatus
                                    }
                                </td>
                                <td>
                                    @if (item.DeductionDate != null)
                                    {
                                        @Convert.ToDateTime(item.DeductionDate).ToString("dd MMM yyyy hh:mm tt")
                                    }
                                    else
                                    {
                                        <span>-</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>


        </div>
    </div>
</div>

<script src="~/plugins/bootstrap-select/js/bootstrap-select.js"></script>

<script src="~/plugins/momentjs/moment.js"></script>
<script src="~/Ems/js/bootstrap-datetimepicker.min.js"></script>

<script src="~/js/pages/ui/modals.js"></script>
<script src="~/plugins/bootbox/bootbox.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script>
    function deductButton(employeeCode,date) {
        var messageText = 'Are you sure you want to deduct amount of 1 day from salary';
        bootbox.confirm({
            message: messageText,
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({
                        url: '@Url.Action("DeductOneDayFromSalary", "Attendance")',
                        type: "POST",
                        datatype: "json",
                        data: { "EmployeeCode": employeeCode, "Date": date },
                        success: function () {
                            bootbox.alert({
                                message: "Amount of 1 day deducted from salary",
                                callback: function () {
                                    window.parent.location.reload();
                                }
                            });

                        },
                        error: function () {
                            bootbox.alert("Something went wrong.Please try after sometime");
                        }
                    });
                }
            }
        });
    }
    $(document).ready(function () {
        var table = $('#LeaveDetails').DataTable({
            sDom: '<"myexport"B>ifrtlp',
            "aoColumns": [
                null,
                { "sType": "date" },  //  "sType": "date" TO SPECIFY SORTING IS APPLICABLE ON DATE
                null,
                null,
                null,
                null
            ],
            "order": [1, "asc"],
            paging: false,
            scrollY: "400px",
            scrollCollapse: true,
            buttons: [
                {
                    extend: 'pdfHtml5',
                    title: 'Leaves In Detail - @Model.EmployeeName',
                    text: 'Pdf',
                    titleAttr: 'Export to PDF'
                },
                {
                    extend: 'excel',
                    title: 'Leaves In Detail - @Model.EmployeeName',
                    text: 'Excel',
                    titleAttr: 'Export to Excel '
                },
                {
                    extend: 'print',
                    title: 'Leaves In Detail - @Model.EmployeeName',
                    text: 'Print',
                    titleAttr: 'Print'
                }],
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                if (aData[2].startsWith("Absent")) {
                    $('td', nRow).addClass('danger');
                }
            }
        });
        debugger;
        table.columns.adjust();
    });
</script>
<script src="~/plugins/jquery-datatable/skin/bootstrap/js/dataTables.bootstrap.js"></script>
<script src="~/plugins/jquery-datatable/extensions/export/dataTables.buttons.min.js"></script>

<script src="~/Ems/js/jquery.dataTables.min.js"></script>
<script src="~/Ems/js/dataTables.buttons.min.js"></script>
<script src="~/Ems/js/buttons.flash.min.js"></script>
<script src="~/Ems/js/jszip.min.js"></script>
<script src="~/Ems/js/pdfmake.min.js"></script>
<script src="~/Ems/js/vfs_fonts.js"></script>
<script src="~/Ems/js/buttons.html5.min.js"></script>
<script src="~/Ems/js/buttons.print.min.js"></script>
<script src="~/Ems/js/dataTables.responsive.min.js"></script>
<script src="~/plugins/jquery-datatable/skin/bootstrap/js/dataTables.bootstrap.js"></script>
<script src="~/plugins/FixedColumns-3.2.5/js/dataTables.fixedColumns.min.js"></script>
@model IEnumerable<EIS.Entities.Employee.Person>
<head>
    <title>All Attendance</title>

    <link href="~/Ems/css/toastr.css" rel="stylesheet" />
    <link href="~/Ems/css/rowReorder.dataTables.min.css" rel="stylesheet" />
    <link href="~/Ems/css/responsive.dataTables.min.css" rel="stylesheet" />
    <link href="~/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.css" rel="stylesheet" />
    <link href="~/lib/bootstrap/dist/css/bootstrap-datetimepicker1.css" rel="stylesheet" />
    @*for pdf*@
    <link href="~/Ems/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Ems/css/buttons.dataTables.min.css" rel="stylesheet" />

    <style type="text/css">
        .bootstrap-datetimepicker-widget tr:hover {
            background-color: #808080;
        }

        #generateReport {
            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
        }

        #select {
            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
        }

        #inputyear, #inputmonth, #inputweek {
            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
        }

        .dataTables_wrapper .myexport .dt-buttons {
            float: right;
        }

        td {
            width: 200px;
            text-align: center
        }

        th {
            font-size: medium;
            text-align: center
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="block-header">
            <HeaderWithButton header-name="Attendance Reports"></HeaderWithButton>
        </div>
        <div class="row clearfix">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="card">
                    <div class="body">
                        <div class="row col-md-12">
                            <div class="col-md-9">
                                <div class="row">
                                    <div class="col-md-4">
                                        <label>Select Type Of Reports</label>
                                        <select class="form-control" id="select">
                                            <option value="year" id="year">Year</option>
                                            <option selected value="month" id="month">Month</option>
                                            <option value="week" id="week">Week</option>
                                        </select>
                                    </div>
                                    <div class="col-md-4">
                                        <div id="inputyeardiv" hidden="hidden">
                                            <label>Select Year</label><br />
                                            <input class="form-control" type="text" id="inputyear" placeholder="select year" />
                                        </div>
                                        <div id="inputmonthdiv">
                                            <label>Select Month</label><br />
                                            <input class="form-control" type="text" id="inputmonth" placeholder="select month" />
                                        </div>
                                        <div id="inputweekdiv" hidden="hidden">
                                            <label>Select Week</label><br />
                                            <input class="form-control" type="text" id="inputweek" placeholder="select week" />
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <br />
                                        <input class="form-control" type="button" id="generateReport" value="Generate" style="font-weight:bold; font-size:16px; height:40px; background-color:#3399ff; color:white;" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 col-xs-12">

                            </div>
                        </div>
                        <div>
                            <div>
                                <h4 id="report">Attendance Report</h4>
                            </div>
                            <div>
                                <table id="example" class="table table-striped table-bordered dt-responsive nowrap" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Present Days</th>
                                            <th>Absent Days</th>
                                            <th>Total Days</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

@*for datetimepicker*@
<script src="~/plugins/momentjs/moment.js"></script>
<script src="~/Ems/js/moment.min.js"></script>
<script src="~/Ems/js/bootstrap-datetimepicker.min.js"></script>
<script src="~/lib/bootstrap/dist/js/moment1.js"></script>
@*<script src="~/lib/bootstrap/dist/js/bootstrap-datetimepicker1.js"></script>*@
<script src="../../plugins/jquery-datatable/jquery.dataTables.js"></script>
<script src="../../plugins/jquery-datatable/skin/bootstrap/js/dataTables.bootstrap.js"></script>

@*for pdf*@
<script src="~/Ems/js/jquery.dataTables.min.js"></script>
<script src="~/Ems/js/dataTables.buttons.min.js"></script>
<script src="~/Ems/js/pdfmake.min.js"></script>
<script src="~/Ems/js/vfs_fonts.js"></script>
<script src="~/Ems/js/buttons.html5.min.js"></script>
<script src="~/Ems/js/moment.js-2.8.4-moment.min.js"></script>
<script src="~/Ems/js/sorting-datetime-moment.js"></script>
<script src="~/Ems/js/toastr.js"></script>
<script src="~/Ems/js/dataTables.responsive.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootbox.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var totalDays = 0;
        var currentDate = new Date();
        var m = ((currentDate.getMonth() + 1) >= 10) ? (currentDate.getMonth() + 1) : '0' + (currentDate.getMonth() + 1);
        $('#inputmonth').datetimepicker({
            format: "MM/YYYY"
        });
        var y = new Date().getFullYear();
        var ld = new Date(y, m, 0).getDate();
        var days = workingDaysBetweenDates(y + '-' + m + '-01', y + '-' + m + '-' + ld);
        totalDays = days;
        $('#inputmonth').val(m + '/' + y);
        generateReport(m + '/' + y, 'month');
        $('#select').on('change', function () {
            var v = $('#select').val();
            if (v == 'year') {
                $('#inputyear').val(y);
                $('#inputyeardiv').show();
                $('#inputmonthdiv').hide();
                $('#inputweekdiv').hide();
                $('#inputyear').datetimepicker({
                    format: "YYYY"
                });
            }
            else if (v == 'month') {
                $('#inputmonthdiv').show();
                $('#inputyeardiv').hide();
                $('#inputweekdiv').hide();
                $('#inputmonth').datetimepicker({
                    format: "MM/YYYY"
                });
            }
            else if (v == 'week') {
                var fd = getSunday(new Date());
                var ld = new Date();
                ld.setDate(fd.getDate() + 6);
                var firstDate = moment(fd, "MMM/DD/YYYY").day(0).format("MMM/DD/YYYY");
                var lastDate = moment(ld, "MMM/DD/YYYY").day(6).format("MMM/DD/YYYY");
                var weekstring = firstDate + '-' + lastDate;
                $("#inputweek").val(weekstring);
                $('#inputmonthdiv').hide();
                $('#inputyeardiv').hide();
                $('#inputweekdiv').show();
                $("#inputweek").datetimepicker({
                    format: "MMM/DD/YYYY"
                });
            }
        });
        function getSunday(d) {
            d = new Date(d);
            var day = d.getDay(),
                diff = d.getDate() - day /*+ (day == 0 ? -6 : 1)*/; // adjust when day is sunday
            return new Date(d.setDate(diff));
        }
        $('#inputweek').on('dp.change', function (e) {
            var value = $("#inputweek").val();
            var firstDate = moment(value, "MMM/DD/YYYY").day(0).format("MMM/DD/YYYY");
            var lastDate = moment(value, "MMM/DD/YYYY").day(6).format("MMM/DD/YYYY");
            $("#inputweek").val(firstDate + " - " + lastDate);
        });
        $('#generateReport').on('click', function () {
            var v = $('#select').val();
            if (v == 'year') {
                var value = $("#inputyear").val();
                var days = workingDaysBetweenDates(value + "-01-01", value + "-12-31");
                $("#inputyear").val(value);
                totalDays = days;
                //if (value % 4 == 0) {
                //    totalDays = 366;
                //}
                //else {
                //    totalDays = 365;
                //}
                generateReport(value, 'year');
            }
            else if (v == 'month') {
                var value = $("#inputmonth").val();
                $("#inputmonth").val(value);
                var monthYear = value.split('/');
                var y = monthYear[1];
                var m = monthYear[0];
                var ld = new Date(y, m, 0).getDate();
                var days = workingDaysBetweenDates(y + '-' + m + '-01', y + '-' + m + '-' + ld);
                totalDays = days;
                generateReport(value, 'month');
            }
            else if (v == 'week') {
                var value = $("#inputweek").val();
                var firstDate = moment(value, "MMM/DD/YYYY").day(0).format("MMM/DD/YYYY");
                var lastDate = moment(value, "MMM/DD/YYYY").day(6).format("MMM/DD/YYYY");
                $("#inputweek").val(firstDate + " - " + lastDate);
                generateReport(firstDate + " - " + lastDate, 'week');
                var days = workingDaysBetweenDates(moment(value, "MMM/DD/YYYY").day(0).format("YYYY-MM-DD"), moment(value, "MMM/DD/YYYY").day(6).format("YYYY-MM-DD"));
                totalDays = days;
            }
        });

        function generateReport(value, type) {
     
      $.fn.dataTable.ext.errMode = 'none';
            $('#example').on('error.dt', function () {
                    bootbox.alert('<h4>Unable to load data from Server. Please try after sometime</h4>');
            }).DataTable();
            $('#example').DataTable().destroy();
        $('#example tbody').empty();
            var dTable = $('#example').DataTable({
                sDom: '<"myexport"B>ifrtlp',
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                buttons: [
                    {
                        extend: 'pdfHtml5',
                        title: 'ATTENDANCE REPORT',
                        text: 'Export',
                        titleAttr: 'Export to Pdf'
                    }
                ],
                "aoColumnDefs": [
                    { "aTargets": [0], "bSortable": true },
                    { "aTargets": ['_all'], "bSortable": false }
                ],

                lengthMenu: [
                    [10, 25, -1],
                    ['10', '25', 'All']
                ],
                ajax: {
                    "url":'@Url.Action("AllAttendance","Attendance")?date='+value+'&type='+type,
                    "type": "POST",
                    "datatype": "json",
                    //"data": { "date": value, "type": type },
                },
                "columns": [
                    {
                        "data": null, "name": "FirstName", "autoWidth": true, render: function (row) {
                            return row.FirstName + " " + row.MiddleName + " " + row.LastName;
                        }
                    },
                    {
                        "data": "Attendance", "name": "Attendance", "autoWidth": true, render: function (data) {
                            return data.length;
                        }
                    },
                    {
                        "data": "Attendance", "name": "Attendance", "autoWidth": true, render: function (data) {
                            return totalDays - data.length;
                        }
                    },
                    {
                        data: null, "autoWidth": true, render: function () {
                            return totalDays;
                        }
                    }
                ],
                "initComplete": function () {
                    var $searchInput = $('div.dataTables_filter input');
                    $searchInput.unbind();
                    $searchInput.bind('keyup', function (e) {
                        if (this.value.length >= 3 || this.value.length == 0) {
                            dTable.search(this.value).draw();
                        }
                    });
                }
            });
        }
    });
    function workingDaysBetweenDates(d0, d1) {
        //var holidays = ['2016-05-03', '2016-05-05'];
        var startDate = parseDate(d0);
        var endDate = parseDate(d1);
        // Validate input
        if (endDate < startDate) {
            return 0;
        }
        // Calculate days between dates
        var millisecondsPerDay = 86400 * 1000; // Day in milliseconds
        startDate.setHours(0, 0, 0, 1);  // Start just after midnight
        endDate.setHours(23, 59, 59, 999);  // End just before midnight
        var diff = endDate - startDate;  // Milliseconds between datetime objects    
        var days = Math.ceil(diff / millisecondsPerDay);

        // Subtract two weekend days for every week in between
        var weeks = Math.floor(days / 7);
        days -= weeks * 1;

        // Handle special cases
        var startDay = startDate.getDay();
        var endDay = endDate.getDay();

        // Remove weekend not previously removed.   
        if (startDay - endDay > 1) {
            days -= 2;
        }
        // Remove start day if span starts on Sunday but ends before Saturday
        //if (startDay == 0 && endDay != 6) {
        //    days--;
        //}
        // Remove end day if span ends on Saturday but starts after Sunday
        //if (endDay == 6 && startDay != 0) {
        //    days--;
        //}
        /* Here is the code */
        //for (var i in holidays) {
        //    if ((holidays[i] >= d0) && (holidays[i] <= d1)) {
        //        days--;
        //    }
        //}
        return days;
    }

    function parseDate(input) {
        // Transform date from text to date
        var parts = input.match(/(\d+)/g);
        // new Date(year, month [, date [, hours[, minutes[, seconds[, ms]]]]])
        return new Date(parts[0], parts[1] - 1, parts[2]); // months are 0-based
    }
</script>

